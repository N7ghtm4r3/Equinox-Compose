[{"name":"BOTTOM","description":"com.tecknobit.equinoxcompose.utilities.BorderToColor.BOTTOM","location":"-equinox--compose/com.tecknobit.equinoxcompose.utilities/-border-to-color/-b-o-t-t-o-m/index.html","searchKeys":["BOTTOM","BOTTOM","com.tecknobit.equinoxcompose.utilities.BorderToColor.BOTTOM"]},{"name":"END","description":"com.tecknobit.equinoxcompose.utilities.BorderToColor.END","location":"-equinox--compose/com.tecknobit.equinoxcompose.utilities/-border-to-color/-e-n-d/index.html","searchKeys":["END","END","com.tecknobit.equinoxcompose.utilities.BorderToColor.END"]},{"name":"NO_INTERNET_CONNECTION","description":"com.tecknobit.equinoxcompose.helpers.session.SessionStatus.NO_INTERNET_CONNECTION","location":"-equinox--compose/com.tecknobit.equinoxcompose.helpers.session/-session-status/-n-o_-i-n-t-e-r-n-e-t_-c-o-n-n-e-c-t-i-o-n/index.html","searchKeys":["NO_INTERNET_CONNECTION","NO_INTERNET_CONNECTION","com.tecknobit.equinoxcompose.helpers.session.SessionStatus.NO_INTERNET_CONNECTION"]},{"name":"ON_DISPOSE","description":"com.tecknobit.equinoxcompose.helpers.session.EquinoxScreen.EquinoxScreenEvent.ON_DISPOSE","location":"-equinox--compose/com.tecknobit.equinoxcompose.helpers.session/-equinox-screen/-equinox-screen-event/-o-n_-d-i-s-p-o-s-e/index.html","searchKeys":["ON_DISPOSE","ON_DISPOSE","com.tecknobit.equinoxcompose.helpers.session.EquinoxScreen.EquinoxScreenEvent.ON_DISPOSE"]},{"name":"ON_INIT","description":"com.tecknobit.equinoxcompose.helpers.session.EquinoxScreen.EquinoxScreenEvent.ON_INIT","location":"-equinox--compose/com.tecknobit.equinoxcompose.helpers.session/-equinox-screen/-equinox-screen-event/-o-n_-i-n-i-t/index.html","searchKeys":["ON_INIT","ON_INIT","com.tecknobit.equinoxcompose.helpers.session.EquinoxScreen.EquinoxScreenEvent.ON_INIT"]},{"name":"OPERATIONAL","description":"com.tecknobit.equinoxcompose.helpers.session.SessionStatus.OPERATIONAL","location":"-equinox--compose/com.tecknobit.equinoxcompose.helpers.session/-session-status/-o-p-e-r-a-t-i-o-n-a-l/index.html","searchKeys":["OPERATIONAL","OPERATIONAL","com.tecknobit.equinoxcompose.helpers.session.SessionStatus.OPERATIONAL"]},{"name":"SERVER_OFFLINE","description":"com.tecknobit.equinoxcompose.helpers.session.SessionStatus.SERVER_OFFLINE","location":"-equinox--compose/com.tecknobit.equinoxcompose.helpers.session/-session-status/-s-e-r-v-e-r_-o-f-f-l-i-n-e/index.html","searchKeys":["SERVER_OFFLINE","SERVER_OFFLINE","com.tecknobit.equinoxcompose.helpers.session.SessionStatus.SERVER_OFFLINE"]},{"name":"START","description":"com.tecknobit.equinoxcompose.utilities.BorderToColor.START","location":"-equinox--compose/com.tecknobit.equinoxcompose.utilities/-border-to-color/-s-t-a-r-t/index.html","searchKeys":["START","START","com.tecknobit.equinoxcompose.utilities.BorderToColor.START"]},{"name":"TOP","description":"com.tecknobit.equinoxcompose.utilities.BorderToColor.TOP","location":"-equinox--compose/com.tecknobit.equinoxcompose.utilities/-border-to-color/-t-o-p/index.html","searchKeys":["TOP","TOP","com.tecknobit.equinoxcompose.utilities.BorderToColor.TOP"]},{"name":"USER_DISCONNECTED","description":"com.tecknobit.equinoxcompose.helpers.session.SessionStatus.USER_DISCONNECTED","location":"-equinox--compose/com.tecknobit.equinoxcompose.helpers.session/-session-status/-u-s-e-r_-d-i-s-c-o-n-n-e-c-t-e-d/index.html","searchKeys":["USER_DISCONNECTED","USER_DISCONNECTED","com.tecknobit.equinoxcompose.helpers.session.SessionStatus.USER_DISCONNECTED"]},{"name":"abstract class EquinoxAuthViewModel(val snackbarHostState: SnackbarHostState, val requester: <Error class: unknown class>, val localUser: <Error class: unknown class>) : EquinoxViewModel","description":"com.tecknobit.equinoxcompose.helpers.viewmodels.EquinoxAuthViewModel","location":"-equinox--compose/com.tecknobit.equinoxcompose.helpers.viewmodels/-equinox-auth-view-model/index.html","searchKeys":["EquinoxAuthViewModel","abstract class EquinoxAuthViewModel(val snackbarHostState: SnackbarHostState, val requester: <Error class: unknown class>, val localUser: <Error class: unknown class>) : EquinoxViewModel","com.tecknobit.equinoxcompose.helpers.viewmodels.EquinoxAuthViewModel"]},{"name":"abstract class EquinoxScreen<V : EquinoxViewModel>(val loggerEnabled: Boolean = true, val viewModel: V? = null)","description":"com.tecknobit.equinoxcompose.helpers.session.EquinoxScreen","location":"-equinox--compose/com.tecknobit.equinoxcompose.helpers.session/-equinox-screen/index.html","searchKeys":["EquinoxScreen","abstract class EquinoxScreen<V : EquinoxViewModel>(val loggerEnabled: Boolean = true, val viewModel: V? = null)","com.tecknobit.equinoxcompose.helpers.session.EquinoxScreen"]},{"name":"abstract class EquinoxViewModel(val snackbarHostState: SnackbarHostState? = null) : ViewModel","description":"com.tecknobit.equinoxcompose.helpers.viewmodels.EquinoxViewModel","location":"-equinox--compose/com.tecknobit.equinoxcompose.helpers.viewmodels/-equinox-view-model/index.html","searchKeys":["EquinoxViewModel","abstract class EquinoxViewModel(val snackbarHostState: SnackbarHostState? = null) : ViewModel","com.tecknobit.equinoxcompose.helpers.viewmodels.EquinoxViewModel"]},{"name":"class AppContextInitializer : Initializer<Context> ","description":"com.tecknobit.equinoxcompose.helpers.utils.AppContextInitializer","location":"-equinox--compose/com.tecknobit.equinoxcompose.helpers.utils/-app-context-initializer/index.html","searchKeys":["AppContextInitializer","class AppContextInitializer : Initializer<Context> ","com.tecknobit.equinoxcompose.helpers.utils.AppContextInitializer"]},{"name":"class SplitTextState","description":"com.tecknobit.equinoxcompose.components.splittext.SplitTextState","location":"-equinox--compose/com.tecknobit.equinoxcompose.components.splittext/-split-text-state/index.html","searchKeys":["SplitTextState","class SplitTextState","com.tecknobit.equinoxcompose.components.splittext.SplitTextState"]},{"name":"class TabSelectorState","description":"com.tecknobit.equinoxcompose.components.tabselector.TabSelectorState","location":"-equinox--compose/com.tecknobit.equinoxcompose.components.tabselector/-tab-selector-state/index.html","searchKeys":["TabSelectorState","class TabSelectorState","com.tecknobit.equinoxcompose.components.tabselector.TabSelectorState"]},{"name":"const val MAX_TABS_ALLOWED: Int = 5","description":"com.tecknobit.equinoxcompose.components.tabselector.MAX_TABS_ALLOWED","location":"-equinox--compose/com.tecknobit.equinoxcompose.components.tabselector/-m-a-x_-t-a-b-s_-a-l-l-o-w-e-d.html","searchKeys":["MAX_TABS_ALLOWED","const val MAX_TABS_ALLOWED: Int = 5","com.tecknobit.equinoxcompose.components.tabselector.MAX_TABS_ALLOWED"]},{"name":"constructor()","description":"com.tecknobit.equinoxcompose.helpers.utils.AppContextInitializer.AppContextInitializer","location":"-equinox--compose/com.tecknobit.equinoxcompose.helpers.utils/-app-context-initializer/-app-context-initializer.html","searchKeys":["AppContextInitializer","constructor()","com.tecknobit.equinoxcompose.helpers.utils.AppContextInitializer.AppContextInitializer"]},{"name":"constructor(icon: ImageVector? = null, selectedIcon: ImageVector = Icons.Default.Check, tabTitle: String)","description":"com.tecknobit.equinoxcompose.components.tabselector.TabDetails.TabDetails","location":"-equinox--compose/com.tecknobit.equinoxcompose.components.tabselector/-tab-details/-tab-details.html","searchKeys":["TabDetails","constructor(icon: ImageVector? = null, selectedIcon: ImageVector = Icons.Default.Check, tabTitle: String)","com.tecknobit.equinoxcompose.components.tabselector.TabDetails.TabDetails"]},{"name":"constructor(loggerEnabled: Boolean = true, viewModel: V? = null)","description":"com.tecknobit.equinoxcompose.helpers.session.EquinoxScreen.EquinoxScreen","location":"-equinox--compose/com.tecknobit.equinoxcompose.helpers.session/-equinox-screen/-equinox-screen.html","searchKeys":["EquinoxScreen","constructor(loggerEnabled: Boolean = true, viewModel: V? = null)","com.tecknobit.equinoxcompose.helpers.session.EquinoxScreen.EquinoxScreen"]},{"name":"constructor(serverOfflineMessage: String, serverOfflineIcon: ImageVector, noInternetConnectionMessage: String, noInternetConnectionIcon: ImageVector, hasBeenDisconnectedAction: () -> Unit)","description":"com.tecknobit.equinoxcompose.helpers.session.SessionSetup.SessionSetup","location":"-equinox--compose/com.tecknobit.equinoxcompose.helpers.session/-session-setup/-session-setup.html","searchKeys":["SessionSetup","constructor(serverOfflineMessage: String, serverOfflineIcon: ImageVector, noInternetConnectionMessage: String, noInternetConnectionIcon: ImageVector, hasBeenDisconnectedAction: () -> Unit)","com.tecknobit.equinoxcompose.helpers.session.SessionSetup.SessionSetup"]},{"name":"constructor(snackbarHostState: SnackbarHostState, requester: <Error class: unknown class>, localUser: <Error class: unknown class>)","description":"com.tecknobit.equinoxcompose.helpers.viewmodels.EquinoxAuthViewModel.EquinoxAuthViewModel","location":"-equinox--compose/com.tecknobit.equinoxcompose.helpers.viewmodels/-equinox-auth-view-model/-equinox-auth-view-model.html","searchKeys":["EquinoxAuthViewModel","constructor(snackbarHostState: SnackbarHostState, requester: <Error class: unknown class>, localUser: <Error class: unknown class>)","com.tecknobit.equinoxcompose.helpers.viewmodels.EquinoxAuthViewModel.EquinoxAuthViewModel"]},{"name":"constructor(snackbarHostState: SnackbarHostState, requester: <Error class: unknown class>, localUser: <Error class: unknown class>)","description":"com.tecknobit.equinoxcompose.helpers.viewmodels.EquinoxProfileViewModel.EquinoxProfileViewModel","location":"-equinox--compose/com.tecknobit.equinoxcompose.helpers.viewmodels/-equinox-profile-view-model/-equinox-profile-view-model.html","searchKeys":["EquinoxProfileViewModel","constructor(snackbarHostState: SnackbarHostState, requester: <Error class: unknown class>, localUser: <Error class: unknown class>)","com.tecknobit.equinoxcompose.helpers.viewmodels.EquinoxProfileViewModel.EquinoxProfileViewModel"]},{"name":"constructor(snackbarHostState: SnackbarHostState? = null)","description":"com.tecknobit.equinoxcompose.helpers.viewmodels.EquinoxViewModel.EquinoxViewModel","location":"-equinox--compose/com.tecknobit.equinoxcompose.helpers.viewmodels/-equinox-view-model/-equinox-view-model.html","searchKeys":["EquinoxViewModel","constructor(snackbarHostState: SnackbarHostState? = null)","com.tecknobit.equinoxcompose.helpers.viewmodels.EquinoxViewModel.EquinoxViewModel"]},{"name":"constructor(text: String, textStyle: TextStyle = TextStyle.Default, fontSize: TextUnit = 14.sp, color: Color? = null)","description":"com.tecknobit.equinoxcompose.components.splittext.InfoText.InfoText","location":"-equinox--compose/com.tecknobit.equinoxcompose.components.splittext/-info-text/-info-text.html","searchKeys":["InfoText","constructor(text: String, textStyle: TextStyle = TextStyle.Default, fontSize: TextUnit = 14.sp, color: Color? = null)","com.tecknobit.equinoxcompose.components.splittext.InfoText.InfoText"]},{"name":"constructor(visible: Boolean, onEnter: EnterTransition, onExit: ExitTransition)","description":"com.tecknobit.equinoxcompose.components.UIAnimations.UIAnimations","location":"-equinox--compose/com.tecknobit.equinoxcompose.components/-u-i-animations/-u-i-animations.html","searchKeys":["UIAnimations","constructor(visible: Boolean, onEnter: EnterTransition, onExit: ExitTransition)","com.tecknobit.equinoxcompose.components.UIAnimations.UIAnimations"]},{"name":"data class InfoText(val text: String, val textStyle: TextStyle = TextStyle.Default, val fontSize: TextUnit = 14.sp, val color: Color? = null)","description":"com.tecknobit.equinoxcompose.components.splittext.InfoText","location":"-equinox--compose/com.tecknobit.equinoxcompose.components.splittext/-info-text/index.html","searchKeys":["InfoText","data class InfoText(val text: String, val textStyle: TextStyle = TextStyle.Default, val fontSize: TextUnit = 14.sp, val color: Color? = null)","com.tecknobit.equinoxcompose.components.splittext.InfoText"]},{"name":"data class SessionSetup(val serverOfflineMessage: String, val serverOfflineIcon: ImageVector, val noInternetConnectionMessage: String, val noInternetConnectionIcon: ImageVector, val hasBeenDisconnectedAction: () -> Unit)","description":"com.tecknobit.equinoxcompose.helpers.session.SessionSetup","location":"-equinox--compose/com.tecknobit.equinoxcompose.helpers.session/-session-setup/index.html","searchKeys":["SessionSetup","data class SessionSetup(val serverOfflineMessage: String, val serverOfflineIcon: ImageVector, val noInternetConnectionMessage: String, val noInternetConnectionIcon: ImageVector, val hasBeenDisconnectedAction: () -> Unit)","com.tecknobit.equinoxcompose.helpers.session.SessionSetup"]},{"name":"data class TabDetails(val icon: ImageVector? = null, val selectedIcon: ImageVector = Icons.Default.Check, val tabTitle: String)","description":"com.tecknobit.equinoxcompose.components.tabselector.TabDetails","location":"-equinox--compose/com.tecknobit.equinoxcompose.components.tabselector/-tab-details/index.html","searchKeys":["TabDetails","data class TabDetails(val icon: ImageVector? = null, val selectedIcon: ImageVector = Icons.Default.Check, val tabTitle: String)","com.tecknobit.equinoxcompose.components.tabselector.TabDetails"]},{"name":"data class UIAnimations(val visible: Boolean, val onEnter: EnterTransition, val onExit: ExitTransition)","description":"com.tecknobit.equinoxcompose.components.UIAnimations","location":"-equinox--compose/com.tecknobit.equinoxcompose.components/-u-i-animations/index.html","searchKeys":["UIAnimations","data class UIAnimations(val visible: Boolean, val onEnter: EnterTransition, val onExit: ExitTransition)","com.tecknobit.equinoxcompose.components.UIAnimations"]},{"name":"enum BorderToColor : Enum<BorderToColor> ","description":"com.tecknobit.equinoxcompose.utilities.BorderToColor","location":"-equinox--compose/com.tecknobit.equinoxcompose.utilities/-border-to-color/index.html","searchKeys":["BorderToColor","enum BorderToColor : Enum<BorderToColor> ","com.tecknobit.equinoxcompose.utilities.BorderToColor"]},{"name":"enum EquinoxScreenEvent : Enum<EquinoxScreen.EquinoxScreenEvent> ","description":"com.tecknobit.equinoxcompose.helpers.session.EquinoxScreen.EquinoxScreenEvent","location":"-equinox--compose/com.tecknobit.equinoxcompose.helpers.session/-equinox-screen/-equinox-screen-event/index.html","searchKeys":["EquinoxScreenEvent","enum EquinoxScreenEvent : Enum<EquinoxScreen.EquinoxScreenEvent> ","com.tecknobit.equinoxcompose.helpers.session.EquinoxScreen.EquinoxScreenEvent"]},{"name":"enum SessionStatus : Enum<SessionStatus> ","description":"com.tecknobit.equinoxcompose.helpers.session.SessionStatus","location":"-equinox--compose/com.tecknobit.equinoxcompose.helpers.session/-session-status/index.html","searchKeys":["SessionStatus","enum SessionStatus : Enum<SessionStatus> ","com.tecknobit.equinoxcompose.helpers.session.SessionStatus"]},{"name":"expect fun checkInternetConnection(noInternetConnectionState: MutableState<Boolean>)","description":"com.tecknobit.equinoxcompose.helpers.session.checkInternetConnection","location":"-equinox--compose/com.tecknobit.equinoxcompose.helpers.session/check-internet-connection.html","searchKeys":["checkInternetConnection","expect fun checkInternetConnection(noInternetConnectionState: MutableState<Boolean>)","com.tecknobit.equinoxcompose.helpers.session.checkInternetConnection"]},{"name":"fun ChameleonText(text: String, modifier: Modifier = Modifier, fontSize: TextUnit = TextUnit.Unspecified, fontStyle: FontStyle? = null, fontWeight: FontWeight? = null, fontFamily: FontFamily? = null, letterSpacing: TextUnit = TextUnit.Unspecified, textDecoration: TextDecoration? = null, textAlign: TextAlign? = null, lineHeight: TextUnit = TextUnit.Unspecified, overflow: TextOverflow = TextOverflow.Clip, softWrap: Boolean = true, maxLines: Int = Int.MAX_VALUE, minLines: Int = 1, onTextLayout: (TextLayoutResult) -> Unit? = null, style: TextStyle = LocalTextStyle.current, backgroundColor: Color)","description":"com.tecknobit.equinoxcompose.components.ChameleonText","location":"-equinox--compose/com.tecknobit.equinoxcompose.components/-chameleon-text.html","searchKeys":["ChameleonText","fun ChameleonText(text: String, modifier: Modifier = Modifier, fontSize: TextUnit = TextUnit.Unspecified, fontStyle: FontStyle? = null, fontWeight: FontWeight? = null, fontFamily: FontFamily? = null, letterSpacing: TextUnit = TextUnit.Unspecified, textDecoration: TextDecoration? = null, textAlign: TextAlign? = null, lineHeight: TextUnit = TextUnit.Unspecified, overflow: TextOverflow = TextOverflow.Clip, softWrap: Boolean = true, maxLines: Int = Int.MAX_VALUE, minLines: Int = 1, onTextLayout: (TextLayoutResult) -> Unit? = null, style: TextStyle = LocalTextStyle.current, backgroundColor: Color)","com.tecknobit.equinoxcompose.components.ChameleonText"]},{"name":"fun ChameleonText(text: String, modifier: Modifier = Modifier, fontSize: TextUnit = TextUnit.Unspecified, fontStyle: FontStyle? = null, fontWeight: FontWeight? = null, fontFamily: FontFamily? = null, letterSpacing: TextUnit = TextUnit.Unspecified, textDecoration: TextDecoration? = null, textAlign: TextAlign? = null, lineHeight: TextUnit = TextUnit.Unspecified, overflow: TextOverflow = TextOverflow.Clip, softWrap: Boolean = true, maxLines: Int = Int.MAX_VALUE, minLines: Int = 1, onTextLayout: (TextLayoutResult) -> Unit? = null, style: TextStyle = LocalTextStyle.current, backgroundImage: ImageBitmap?)","description":"com.tecknobit.equinoxcompose.components.ChameleonText","location":"-equinox--compose/com.tecknobit.equinoxcompose.components/-chameleon-text.html","searchKeys":["ChameleonText","fun ChameleonText(text: String, modifier: Modifier = Modifier, fontSize: TextUnit = TextUnit.Unspecified, fontStyle: FontStyle? = null, fontWeight: FontWeight? = null, fontFamily: FontFamily? = null, letterSpacing: TextUnit = TextUnit.Unspecified, textDecoration: TextDecoration? = null, textAlign: TextAlign? = null, lineHeight: TextUnit = TextUnit.Unspecified, overflow: TextOverflow = TextOverflow.Clip, softWrap: Boolean = true, maxLines: Int = Int.MAX_VALUE, minLines: Int = 1, onTextLayout: (TextLayoutResult) -> Unit? = null, style: TextStyle = LocalTextStyle.current, backgroundImage: ImageBitmap?)","com.tecknobit.equinoxcompose.components.ChameleonText"]},{"name":"fun ChameleonText(text: String, modifier: Modifier = Modifier, fontSize: TextUnit = TextUnit.Unspecified, fontStyle: FontStyle? = null, fontWeight: FontWeight? = null, fontFamily: FontFamily? = null, letterSpacing: TextUnit = TextUnit.Unspecified, textDecoration: TextDecoration? = null, textAlign: TextAlign? = null, lineHeight: TextUnit = TextUnit.Unspecified, overflow: TextOverflow = TextOverflow.Clip, softWrap: Boolean = true, maxLines: Int = Int.MAX_VALUE, minLines: Int = 1, onTextLayout: (TextLayoutResult) -> Unit? = null, style: TextStyle = LocalTextStyle.current, backgroundPainter: Painter)","description":"com.tecknobit.equinoxcompose.components.ChameleonText","location":"-equinox--compose/com.tecknobit.equinoxcompose.components/-chameleon-text.html","searchKeys":["ChameleonText","fun ChameleonText(text: String, modifier: Modifier = Modifier, fontSize: TextUnit = TextUnit.Unspecified, fontStyle: FontStyle? = null, fontWeight: FontWeight? = null, fontFamily: FontFamily? = null, letterSpacing: TextUnit = TextUnit.Unspecified, textDecoration: TextDecoration? = null, textAlign: TextAlign? = null, lineHeight: TextUnit = TextUnit.Unspecified, overflow: TextOverflow = TextOverflow.Clip, softWrap: Boolean = true, maxLines: Int = Int.MAX_VALUE, minLines: Int = 1, onTextLayout: (TextLayoutResult) -> Unit? = null, style: TextStyle = LocalTextStyle.current, backgroundPainter: Painter)","com.tecknobit.equinoxcompose.components.ChameleonText"]},{"name":"fun ChameleonText(text: String, modifier: Modifier = Modifier, fontSize: TextUnit = TextUnit.Unspecified, fontStyle: FontStyle? = null, fontWeight: FontWeight? = null, fontFamily: FontFamily? = null, letterSpacing: TextUnit = TextUnit.Unspecified, textDecoration: TextDecoration? = null, textAlign: TextAlign? = null, lineHeight: TextUnit = TextUnit.Unspecified, overflow: TextOverflow = TextOverflow.Clip, softWrap: Boolean = true, maxLines: Int = Int.MAX_VALUE, minLines: Int = 1, onTextLayout: (TextLayoutResult) -> Unit? = null, style: TextStyle = LocalTextStyle.current, hexBackgroundColor: String)","description":"com.tecknobit.equinoxcompose.components.ChameleonText","location":"-equinox--compose/com.tecknobit.equinoxcompose.components/-chameleon-text.html","searchKeys":["ChameleonText","fun ChameleonText(text: String, modifier: Modifier = Modifier, fontSize: TextUnit = TextUnit.Unspecified, fontStyle: FontStyle? = null, fontWeight: FontWeight? = null, fontFamily: FontFamily? = null, letterSpacing: TextUnit = TextUnit.Unspecified, textDecoration: TextDecoration? = null, textAlign: TextAlign? = null, lineHeight: TextUnit = TextUnit.Unspecified, overflow: TextOverflow = TextOverflow.Clip, softWrap: Boolean = true, maxLines: Int = Int.MAX_VALUE, minLines: Int = 1, onTextLayout: (TextLayoutResult) -> Unit? = null, style: TextStyle = LocalTextStyle.current, hexBackgroundColor: String)","com.tecknobit.equinoxcompose.components.ChameleonText"]},{"name":"fun ChameleonText(text: StringResource, modifier: Modifier = Modifier, fontSize: TextUnit = TextUnit.Unspecified, fontStyle: FontStyle? = null, fontWeight: FontWeight? = null, fontFamily: FontFamily? = null, letterSpacing: TextUnit = TextUnit.Unspecified, textDecoration: TextDecoration? = null, textAlign: TextAlign? = null, lineHeight: TextUnit = TextUnit.Unspecified, overflow: TextOverflow = TextOverflow.Clip, softWrap: Boolean = true, maxLines: Int = Int.MAX_VALUE, minLines: Int = 1, onTextLayout: (TextLayoutResult) -> Unit? = null, style: TextStyle = LocalTextStyle.current, backgroundColor: Color)","description":"com.tecknobit.equinoxcompose.components.ChameleonText","location":"-equinox--compose/com.tecknobit.equinoxcompose.components/-chameleon-text.html","searchKeys":["ChameleonText","fun ChameleonText(text: StringResource, modifier: Modifier = Modifier, fontSize: TextUnit = TextUnit.Unspecified, fontStyle: FontStyle? = null, fontWeight: FontWeight? = null, fontFamily: FontFamily? = null, letterSpacing: TextUnit = TextUnit.Unspecified, textDecoration: TextDecoration? = null, textAlign: TextAlign? = null, lineHeight: TextUnit = TextUnit.Unspecified, overflow: TextOverflow = TextOverflow.Clip, softWrap: Boolean = true, maxLines: Int = Int.MAX_VALUE, minLines: Int = 1, onTextLayout: (TextLayoutResult) -> Unit? = null, style: TextStyle = LocalTextStyle.current, backgroundColor: Color)","com.tecknobit.equinoxcompose.components.ChameleonText"]},{"name":"fun ChameleonText(text: StringResource, modifier: Modifier = Modifier, fontSize: TextUnit = TextUnit.Unspecified, fontStyle: FontStyle? = null, fontWeight: FontWeight? = null, fontFamily: FontFamily? = null, letterSpacing: TextUnit = TextUnit.Unspecified, textDecoration: TextDecoration? = null, textAlign: TextAlign? = null, lineHeight: TextUnit = TextUnit.Unspecified, overflow: TextOverflow = TextOverflow.Clip, softWrap: Boolean = true, maxLines: Int = Int.MAX_VALUE, minLines: Int = 1, onTextLayout: (TextLayoutResult) -> Unit? = null, style: TextStyle = LocalTextStyle.current, backgroundImage: ImageBitmap?)","description":"com.tecknobit.equinoxcompose.components.ChameleonText","location":"-equinox--compose/com.tecknobit.equinoxcompose.components/-chameleon-text.html","searchKeys":["ChameleonText","fun ChameleonText(text: StringResource, modifier: Modifier = Modifier, fontSize: TextUnit = TextUnit.Unspecified, fontStyle: FontStyle? = null, fontWeight: FontWeight? = null, fontFamily: FontFamily? = null, letterSpacing: TextUnit = TextUnit.Unspecified, textDecoration: TextDecoration? = null, textAlign: TextAlign? = null, lineHeight: TextUnit = TextUnit.Unspecified, overflow: TextOverflow = TextOverflow.Clip, softWrap: Boolean = true, maxLines: Int = Int.MAX_VALUE, minLines: Int = 1, onTextLayout: (TextLayoutResult) -> Unit? = null, style: TextStyle = LocalTextStyle.current, backgroundImage: ImageBitmap?)","com.tecknobit.equinoxcompose.components.ChameleonText"]},{"name":"fun ChameleonText(text: StringResource, modifier: Modifier = Modifier, fontSize: TextUnit = TextUnit.Unspecified, fontStyle: FontStyle? = null, fontWeight: FontWeight? = null, fontFamily: FontFamily? = null, letterSpacing: TextUnit = TextUnit.Unspecified, textDecoration: TextDecoration? = null, textAlign: TextAlign? = null, lineHeight: TextUnit = TextUnit.Unspecified, overflow: TextOverflow = TextOverflow.Clip, softWrap: Boolean = true, maxLines: Int = Int.MAX_VALUE, minLines: Int = 1, onTextLayout: (TextLayoutResult) -> Unit? = null, style: TextStyle = LocalTextStyle.current, backgroundPainter: Painter)","description":"com.tecknobit.equinoxcompose.components.ChameleonText","location":"-equinox--compose/com.tecknobit.equinoxcompose.components/-chameleon-text.html","searchKeys":["ChameleonText","fun ChameleonText(text: StringResource, modifier: Modifier = Modifier, fontSize: TextUnit = TextUnit.Unspecified, fontStyle: FontStyle? = null, fontWeight: FontWeight? = null, fontFamily: FontFamily? = null, letterSpacing: TextUnit = TextUnit.Unspecified, textDecoration: TextDecoration? = null, textAlign: TextAlign? = null, lineHeight: TextUnit = TextUnit.Unspecified, overflow: TextOverflow = TextOverflow.Clip, softWrap: Boolean = true, maxLines: Int = Int.MAX_VALUE, minLines: Int = 1, onTextLayout: (TextLayoutResult) -> Unit? = null, style: TextStyle = LocalTextStyle.current, backgroundPainter: Painter)","com.tecknobit.equinoxcompose.components.ChameleonText"]},{"name":"fun ChameleonText(text: StringResource, modifier: Modifier = Modifier, fontSize: TextUnit = TextUnit.Unspecified, fontStyle: FontStyle? = null, fontWeight: FontWeight? = null, fontFamily: FontFamily? = null, letterSpacing: TextUnit = TextUnit.Unspecified, textDecoration: TextDecoration? = null, textAlign: TextAlign? = null, lineHeight: TextUnit = TextUnit.Unspecified, overflow: TextOverflow = TextOverflow.Clip, softWrap: Boolean = true, maxLines: Int = Int.MAX_VALUE, minLines: Int = 1, onTextLayout: (TextLayoutResult) -> Unit? = null, style: TextStyle = LocalTextStyle.current, hexBackgroundColor: String)","description":"com.tecknobit.equinoxcompose.components.ChameleonText","location":"-equinox--compose/com.tecknobit.equinoxcompose.components/-chameleon-text.html","searchKeys":["ChameleonText","fun ChameleonText(text: StringResource, modifier: Modifier = Modifier, fontSize: TextUnit = TextUnit.Unspecified, fontStyle: FontStyle? = null, fontWeight: FontWeight? = null, fontFamily: FontFamily? = null, letterSpacing: TextUnit = TextUnit.Unspecified, textDecoration: TextDecoration? = null, textAlign: TextAlign? = null, lineHeight: TextUnit = TextUnit.Unspecified, overflow: TextOverflow = TextOverflow.Clip, softWrap: Boolean = true, maxLines: Int = Int.MAX_VALUE, minLines: Int = 1, onTextLayout: (TextLayoutResult) -> Unit? = null, style: TextStyle = LocalTextStyle.current, hexBackgroundColor: String)","com.tecknobit.equinoxcompose.components.ChameleonText"]},{"name":"fun Color.toHex(): String","description":"com.tecknobit.equinoxcompose.utilities.toHex","location":"-equinox--compose/com.tecknobit.equinoxcompose.utilities/to-hex.html","searchKeys":["toHex","fun Color.toHex(): String","com.tecknobit.equinoxcompose.utilities.toHex"]},{"name":"fun DashedTile(modifier: Modifier = Modifier, strokeWidth: Float = 5.0f, intervals: FloatArray = floatArrayOf(10f, 10f), phase: Float = 0.0f, size: Dp = 115.dp, cornerRadius: Dp = 15.dp, containerColor: Color = MaterialTheme.colorScheme.primary, contentColor: Color = contentColorFor(containerColor), elevation: Dp = 0.dp, icon: ImageVector, iconSize: Dp = 65.dp, text: String, fontWeight: FontWeight = FontWeight.Bold, textStyle: TextStyle = TextStyle.Default.merge(\n        color = contentColor,\n        fontWeight = fontWeight\n    ), onClick: () -> Unit)","description":"com.tecknobit.equinoxcompose.components.DashedTile","location":"-equinox--compose/com.tecknobit.equinoxcompose.components/-dashed-tile.html","searchKeys":["DashedTile","fun DashedTile(modifier: Modifier = Modifier, strokeWidth: Float = 5.0f, intervals: FloatArray = floatArrayOf(10f, 10f), phase: Float = 0.0f, size: Dp = 115.dp, cornerRadius: Dp = 15.dp, containerColor: Color = MaterialTheme.colorScheme.primary, contentColor: Color = contentColorFor(containerColor), elevation: Dp = 0.dp, icon: ImageVector, iconSize: Dp = 65.dp, text: String, fontWeight: FontWeight = FontWeight.Bold, textStyle: TextStyle = TextStyle.Default.merge(\n        color = contentColor,\n        fontWeight = fontWeight\n    ), onClick: () -> Unit)","com.tecknobit.equinoxcompose.components.DashedTile"]},{"name":"fun DashedTile(modifier: Modifier = Modifier, strokeWidth: Float = 5.0f, intervals: FloatArray = floatArrayOf(10f, 10f), phase: Float = 0.0f, size: Dp = 115.dp, cornerRadius: Dp = 15.dp, containerColor: Color = MaterialTheme.colorScheme.primary, contentColor: Color = contentColorFor(containerColor), elevation: Dp = 0.dp, icon: ImageVector, iconSize: Dp = 65.dp, text: StringResource, fontWeight: FontWeight = FontWeight.Bold, textStyle: TextStyle = TextStyle.Default.merge(\n        color = contentColor,\n        fontWeight = fontWeight\n    ), onClick: () -> Unit)","description":"com.tecknobit.equinoxcompose.components.DashedTile","location":"-equinox--compose/com.tecknobit.equinoxcompose.components/-dashed-tile.html","searchKeys":["DashedTile","fun DashedTile(modifier: Modifier = Modifier, strokeWidth: Float = 5.0f, intervals: FloatArray = floatArrayOf(10f, 10f), phase: Float = 0.0f, size: Dp = 115.dp, cornerRadius: Dp = 15.dp, containerColor: Color = MaterialTheme.colorScheme.primary, contentColor: Color = contentColorFor(containerColor), elevation: Dp = 0.dp, icon: ImageVector, iconSize: Dp = 65.dp, text: StringResource, fontWeight: FontWeight = FontWeight.Bold, textStyle: TextStyle = TextStyle.Default.merge(\n        color = contentColor,\n        fontWeight = fontWeight\n    ), onClick: () -> Unit)","com.tecknobit.equinoxcompose.components.DashedTile"]},{"name":"fun EmptyListUI(containerModifier: Modifier = Modifier, imageModifier: Modifier = Modifier, animations: UIAnimations? = null, textStyle: TextStyle = TextStyle.Default, icon: ImageVector, themeColor: Color = MaterialTheme.colorScheme.primary, subText: String)","description":"com.tecknobit.equinoxcompose.components.EmptyListUI","location":"-equinox--compose/com.tecknobit.equinoxcompose.components/-empty-list-u-i.html","searchKeys":["EmptyListUI","fun EmptyListUI(containerModifier: Modifier = Modifier, imageModifier: Modifier = Modifier, animations: UIAnimations? = null, textStyle: TextStyle = TextStyle.Default, icon: ImageVector, themeColor: Color = MaterialTheme.colorScheme.primary, subText: String)","com.tecknobit.equinoxcompose.components.EmptyListUI"]},{"name":"fun EmptyListUI(containerModifier: Modifier = Modifier, imageModifier: Modifier = Modifier, animations: UIAnimations? = null, textStyle: TextStyle = TextStyle.Default, icon: ImageVector, themeColor: Color = MaterialTheme.colorScheme.primary, subText: StringResource)","description":"com.tecknobit.equinoxcompose.components.EmptyListUI","location":"-equinox--compose/com.tecknobit.equinoxcompose.components/-empty-list-u-i.html","searchKeys":["EmptyListUI","fun EmptyListUI(containerModifier: Modifier = Modifier, imageModifier: Modifier = Modifier, animations: UIAnimations? = null, textStyle: TextStyle = TextStyle.Default, icon: ImageVector, themeColor: Color = MaterialTheme.colorScheme.primary, subText: StringResource)","com.tecknobit.equinoxcompose.components.EmptyListUI"]},{"name":"fun EquinoxAlertDialog(modifier: Modifier = Modifier, titleModifier: Modifier = Modifier, titleStyle: TextStyle = TextStyle.Default, show: MutableState<Boolean>, icon: ImageVector? = null, viewModel: EquinoxViewModel? = null, onDismissAction: () -> Unit = {\n        show.value = false\n        viewModel?.restartRefresher()\n    }, title: String, text: () -> Unit, dismissAction: () -> Unit = onDismissAction, dismissText: String?, confirmAction: () -> Unit, confirmText: String)","description":"com.tecknobit.equinoxcompose.components.EquinoxAlertDialog","location":"-equinox--compose/com.tecknobit.equinoxcompose.components/-equinox-alert-dialog.html","searchKeys":["EquinoxAlertDialog","fun EquinoxAlertDialog(modifier: Modifier = Modifier, titleModifier: Modifier = Modifier, titleStyle: TextStyle = TextStyle.Default, show: MutableState<Boolean>, icon: ImageVector? = null, viewModel: EquinoxViewModel? = null, onDismissAction: () -> Unit = {\n        show.value = false\n        viewModel?.restartRefresher()\n    }, title: String, text: () -> Unit, dismissAction: () -> Unit = onDismissAction, dismissText: String?, confirmAction: () -> Unit, confirmText: String)","com.tecknobit.equinoxcompose.components.EquinoxAlertDialog"]},{"name":"fun EquinoxAlertDialog(modifier: Modifier = Modifier, titleModifier: Modifier = Modifier, titleStyle: TextStyle = TextStyle.Default, show: MutableState<Boolean>, icon: ImageVector? = null, viewModel: EquinoxViewModel? = null, onDismissAction: () -> Unit = {\n        show.value = false\n        viewModel?.restartRefresher()\n    }, title: String, text: String, dismissAction: () -> Unit = onDismissAction, dismissText: String?, confirmAction: () -> Unit, confirmText: String)","description":"com.tecknobit.equinoxcompose.components.EquinoxAlertDialog","location":"-equinox--compose/com.tecknobit.equinoxcompose.components/-equinox-alert-dialog.html","searchKeys":["EquinoxAlertDialog","fun EquinoxAlertDialog(modifier: Modifier = Modifier, titleModifier: Modifier = Modifier, titleStyle: TextStyle = TextStyle.Default, show: MutableState<Boolean>, icon: ImageVector? = null, viewModel: EquinoxViewModel? = null, onDismissAction: () -> Unit = {\n        show.value = false\n        viewModel?.restartRefresher()\n    }, title: String, text: String, dismissAction: () -> Unit = onDismissAction, dismissText: String?, confirmAction: () -> Unit, confirmText: String)","com.tecknobit.equinoxcompose.components.EquinoxAlertDialog"]},{"name":"fun EquinoxAlertDialog(modifier: Modifier = Modifier, titleModifier: Modifier = Modifier, titleStyle: TextStyle = TextStyle.Default, show: MutableState<Boolean>, icon: ImageVector? = null, viewModel: EquinoxViewModel? = null, onDismissAction: () -> Unit = {\n        show.value = false\n        viewModel?.restartRefresher()\n    }, title: StringResource, text: () -> Unit, dismissAction: () -> Unit = onDismissAction, dismissText: StringResource? = Res.string.dismiss, confirmAction: () -> Unit, confirmText: StringResource = Res.string.confirm)","description":"com.tecknobit.equinoxcompose.components.EquinoxAlertDialog","location":"-equinox--compose/com.tecknobit.equinoxcompose.components/-equinox-alert-dialog.html","searchKeys":["EquinoxAlertDialog","fun EquinoxAlertDialog(modifier: Modifier = Modifier, titleModifier: Modifier = Modifier, titleStyle: TextStyle = TextStyle.Default, show: MutableState<Boolean>, icon: ImageVector? = null, viewModel: EquinoxViewModel? = null, onDismissAction: () -> Unit = {\n        show.value = false\n        viewModel?.restartRefresher()\n    }, title: StringResource, text: () -> Unit, dismissAction: () -> Unit = onDismissAction, dismissText: StringResource? = Res.string.dismiss, confirmAction: () -> Unit, confirmText: StringResource = Res.string.confirm)","com.tecknobit.equinoxcompose.components.EquinoxAlertDialog"]},{"name":"fun EquinoxAlertDialog(modifier: Modifier = Modifier, titleModifier: Modifier = Modifier, titleStyle: TextStyle = TextStyle.Default, show: MutableState<Boolean>, icon: ImageVector? = null, viewModel: EquinoxViewModel? = null, onDismissAction: () -> Unit = {\n        show.value = false\n        viewModel?.restartRefresher()\n    }, title: StringResource, text: StringResource, dismissAction: () -> Unit = onDismissAction, dismissText: StringResource? = Res.string.dismiss, confirmAction: () -> Unit, confirmText: StringResource = Res.string.confirm)","description":"com.tecknobit.equinoxcompose.components.EquinoxAlertDialog","location":"-equinox--compose/com.tecknobit.equinoxcompose.components/-equinox-alert-dialog.html","searchKeys":["EquinoxAlertDialog","fun EquinoxAlertDialog(modifier: Modifier = Modifier, titleModifier: Modifier = Modifier, titleStyle: TextStyle = TextStyle.Default, show: MutableState<Boolean>, icon: ImageVector? = null, viewModel: EquinoxViewModel? = null, onDismissAction: () -> Unit = {\n        show.value = false\n        viewModel?.restartRefresher()\n    }, title: StringResource, text: StringResource, dismissAction: () -> Unit = onDismissAction, dismissText: StringResource? = Res.string.dismiss, confirmAction: () -> Unit, confirmText: StringResource = Res.string.confirm)","com.tecknobit.equinoxcompose.components.EquinoxAlertDialog"]},{"name":"fun EquinoxDialog(show: MutableState<Boolean>, viewModel: EquinoxViewModel? = null, dialogProperties: DialogProperties = DialogProperties(), onDismissRequest: () -> Unit = {\n        show.value = false\n        viewModel?.restartRefresher()\n    }, dialogContent: () -> Unit)","description":"com.tecknobit.equinoxcompose.components.EquinoxDialog","location":"-equinox--compose/com.tecknobit.equinoxcompose.components/-equinox-dialog.html","searchKeys":["EquinoxDialog","fun EquinoxDialog(show: MutableState<Boolean>, viewModel: EquinoxViewModel? = null, dialogProperties: DialogProperties = DialogProperties(), onDismissRequest: () -> Unit = {\n        show.value = false\n        viewModel?.restartRefresher()\n    }, dialogContent: () -> Unit)","com.tecknobit.equinoxcompose.components.EquinoxDialog"]},{"name":"fun EquinoxOutlinedTextField(modifier: Modifier = Modifier, outlinedTextFieldStyle: TextStyle = LocalTextStyle.current, outlinedTextFieldColors: TextFieldColors = OutlinedTextFieldDefaults.colors(), width: Dp = 300.dp, value: MutableState<String>, mustBeInLowerCase: Boolean = false, allowsBlankSpaces: Boolean = true, maxLines: Int = 1, validator: (String) -> Boolean? = null, isError: MutableState<Boolean> = remember { mutableStateOf(false) }, onValueChange: (String) -> Unit = {\n        defaultOnValueChange(validator, isError, value, mustBeInLowerCase, allowsBlankSpaces, it)\n    }, label: String? = null, labelStyle: TextStyle = LocalTextStyle.current, placeholder: String? = null, placeholderStyle: TextStyle = LocalTextStyle.current, errorText: String? = null, errorTextStyle: TextStyle = LocalTextStyle.current, trailingIcon: () -> Unit? = {\n        IconButton(\n            onClick = { value.value = \"\" }\n        ) {\n            Icon(\n                imageVector = Icons.Default.Clear,\n                contentDescription = null\n            )\n        }\n    }, visualTransformation: VisualTransformation = VisualTransformation.None, keyboardOptions: KeyboardOptions = KeyboardOptions.Default, keyboardActions: KeyboardActions = KeyboardActions.Default)","description":"com.tecknobit.equinoxcompose.components.EquinoxOutlinedTextField","location":"-equinox--compose/com.tecknobit.equinoxcompose.components/-equinox-outlined-text-field.html","searchKeys":["EquinoxOutlinedTextField","fun EquinoxOutlinedTextField(modifier: Modifier = Modifier, outlinedTextFieldStyle: TextStyle = LocalTextStyle.current, outlinedTextFieldColors: TextFieldColors = OutlinedTextFieldDefaults.colors(), width: Dp = 300.dp, value: MutableState<String>, mustBeInLowerCase: Boolean = false, allowsBlankSpaces: Boolean = true, maxLines: Int = 1, validator: (String) -> Boolean? = null, isError: MutableState<Boolean> = remember { mutableStateOf(false) }, onValueChange: (String) -> Unit = {\n        defaultOnValueChange(validator, isError, value, mustBeInLowerCase, allowsBlankSpaces, it)\n    }, label: String? = null, labelStyle: TextStyle = LocalTextStyle.current, placeholder: String? = null, placeholderStyle: TextStyle = LocalTextStyle.current, errorText: String? = null, errorTextStyle: TextStyle = LocalTextStyle.current, trailingIcon: () -> Unit? = {\n        IconButton(\n            onClick = { value.value = \"\" }\n        ) {\n            Icon(\n                imageVector = Icons.Default.Clear,\n                contentDescription = null\n            )\n        }\n    }, visualTransformation: VisualTransformation = VisualTransformation.None, keyboardOptions: KeyboardOptions = KeyboardOptions.Default, keyboardActions: KeyboardActions = KeyboardActions.Default)","com.tecknobit.equinoxcompose.components.EquinoxOutlinedTextField"]},{"name":"fun EquinoxOutlinedTextField(modifier: Modifier = Modifier, outlinedTextFieldStyle: TextStyle = LocalTextStyle.current, outlinedTextFieldColors: TextFieldColors = OutlinedTextFieldDefaults.colors(), width: Dp = 300.dp, value: MutableState<String>, mustBeInLowerCase: Boolean = false, allowsBlankSpaces: Boolean = true, maxLines: Int = 1, validator: (String) -> Boolean? = null, isError: MutableState<Boolean> = remember { mutableStateOf(false) }, onValueChange: (String) -> Unit = {\n        defaultOnValueChange(validator, isError, value, mustBeInLowerCase, allowsBlankSpaces, it)\n    }, label: StringResource? = null, labelStyle: TextStyle = LocalTextStyle.current, placeholder: StringResource? = null, placeholderStyle: TextStyle = LocalTextStyle.current, errorText: StringResource? = null, errorTextStyle: TextStyle = LocalTextStyle.current, trailingIcon: () -> Unit? = {\n        IconButton(\n            onClick = { value.value = \"\" }\n        ) {\n            Icon(\n                imageVector = Icons.Default.Clear,\n                contentDescription = null\n            )\n        }\n    }, visualTransformation: VisualTransformation = VisualTransformation.None, keyboardOptions: KeyboardOptions = KeyboardOptions.Default, keyboardActions: KeyboardActions = KeyboardActions.Default)","description":"com.tecknobit.equinoxcompose.components.EquinoxOutlinedTextField","location":"-equinox--compose/com.tecknobit.equinoxcompose.components/-equinox-outlined-text-field.html","searchKeys":["EquinoxOutlinedTextField","fun EquinoxOutlinedTextField(modifier: Modifier = Modifier, outlinedTextFieldStyle: TextStyle = LocalTextStyle.current, outlinedTextFieldColors: TextFieldColors = OutlinedTextFieldDefaults.colors(), width: Dp = 300.dp, value: MutableState<String>, mustBeInLowerCase: Boolean = false, allowsBlankSpaces: Boolean = true, maxLines: Int = 1, validator: (String) -> Boolean? = null, isError: MutableState<Boolean> = remember { mutableStateOf(false) }, onValueChange: (String) -> Unit = {\n        defaultOnValueChange(validator, isError, value, mustBeInLowerCase, allowsBlankSpaces, it)\n    }, label: StringResource? = null, labelStyle: TextStyle = LocalTextStyle.current, placeholder: StringResource? = null, placeholderStyle: TextStyle = LocalTextStyle.current, errorText: StringResource? = null, errorTextStyle: TextStyle = LocalTextStyle.current, trailingIcon: () -> Unit? = {\n        IconButton(\n            onClick = { value.value = \"\" }\n        ) {\n            Icon(\n                imageVector = Icons.Default.Clear,\n                contentDescription = null\n            )\n        }\n    }, visualTransformation: VisualTransformation = VisualTransformation.None, keyboardOptions: KeyboardOptions = KeyboardOptions.Default, keyboardActions: KeyboardActions = KeyboardActions.Default)","com.tecknobit.equinoxcompose.components.EquinoxOutlinedTextField"]},{"name":"fun EquinoxTextField(modifier: Modifier = Modifier, textFieldStyle: TextStyle = LocalTextStyle.current, textFieldColors: TextFieldColors = TextFieldDefaults.colors(), width: Dp = 280.dp, value: MutableState<String>, mustBeInLowerCase: Boolean = false, allowsBlankSpaces: Boolean = true, maxLines: Int = 1, validator: (String) -> Boolean? = null, isError: MutableState<Boolean> = remember { mutableStateOf(false) }, onValueChange: (String) -> Unit = {\n        defaultOnValueChange(validator, isError, value, mustBeInLowerCase, allowsBlankSpaces, it)\n    }, label: String? = null, labelStyle: TextStyle = LocalTextStyle.current, placeholder: String? = null, placeholderStyle: TextStyle = LocalTextStyle.current, errorText: String? = null, errorTextStyle: TextStyle = LocalTextStyle.current, keyboardOptions: KeyboardOptions = KeyboardOptions.Default, keyboardActions: KeyboardActions = KeyboardActions.Default)","description":"com.tecknobit.equinoxcompose.components.EquinoxTextField","location":"-equinox--compose/com.tecknobit.equinoxcompose.components/-equinox-text-field.html","searchKeys":["EquinoxTextField","fun EquinoxTextField(modifier: Modifier = Modifier, textFieldStyle: TextStyle = LocalTextStyle.current, textFieldColors: TextFieldColors = TextFieldDefaults.colors(), width: Dp = 280.dp, value: MutableState<String>, mustBeInLowerCase: Boolean = false, allowsBlankSpaces: Boolean = true, maxLines: Int = 1, validator: (String) -> Boolean? = null, isError: MutableState<Boolean> = remember { mutableStateOf(false) }, onValueChange: (String) -> Unit = {\n        defaultOnValueChange(validator, isError, value, mustBeInLowerCase, allowsBlankSpaces, it)\n    }, label: String? = null, labelStyle: TextStyle = LocalTextStyle.current, placeholder: String? = null, placeholderStyle: TextStyle = LocalTextStyle.current, errorText: String? = null, errorTextStyle: TextStyle = LocalTextStyle.current, keyboardOptions: KeyboardOptions = KeyboardOptions.Default, keyboardActions: KeyboardActions = KeyboardActions.Default)","com.tecknobit.equinoxcompose.components.EquinoxTextField"]},{"name":"fun EquinoxTextField(modifier: Modifier = Modifier, textFieldStyle: TextStyle = LocalTextStyle.current, textFieldColors: TextFieldColors = TextFieldDefaults.colors(), width: Dp = 280.dp, value: MutableState<String>, mustBeInLowerCase: Boolean = false, allowsBlankSpaces: Boolean = true, maxLines: Int = 1, validator: (String) -> Boolean? = null, isError: MutableState<Boolean> = remember { mutableStateOf(false) }, onValueChange: (String) -> Unit = {\n        defaultOnValueChange(validator, isError, value, mustBeInLowerCase, allowsBlankSpaces, it)\n    }, label: StringResource? = null, labelStyle: TextStyle = LocalTextStyle.current, placeholder: StringResource? = null, placeholderStyle: TextStyle = LocalTextStyle.current, errorText: StringResource? = null, errorTextStyle: TextStyle = LocalTextStyle.current, keyboardOptions: KeyboardOptions = KeyboardOptions.Default, keyboardActions: KeyboardActions = KeyboardActions.Default)","description":"com.tecknobit.equinoxcompose.components.EquinoxTextField","location":"-equinox--compose/com.tecknobit.equinoxcompose.components/-equinox-text-field.html","searchKeys":["EquinoxTextField","fun EquinoxTextField(modifier: Modifier = Modifier, textFieldStyle: TextStyle = LocalTextStyle.current, textFieldColors: TextFieldColors = TextFieldDefaults.colors(), width: Dp = 280.dp, value: MutableState<String>, mustBeInLowerCase: Boolean = false, allowsBlankSpaces: Boolean = true, maxLines: Int = 1, validator: (String) -> Boolean? = null, isError: MutableState<Boolean> = remember { mutableStateOf(false) }, onValueChange: (String) -> Unit = {\n        defaultOnValueChange(validator, isError, value, mustBeInLowerCase, allowsBlankSpaces, it)\n    }, label: StringResource? = null, labelStyle: TextStyle = LocalTextStyle.current, placeholder: StringResource? = null, placeholderStyle: TextStyle = LocalTextStyle.current, errorText: StringResource? = null, errorTextStyle: TextStyle = LocalTextStyle.current, keyboardOptions: KeyboardOptions = KeyboardOptions.Default, keyboardActions: KeyboardActions = KeyboardActions.Default)","com.tecknobit.equinoxcompose.components.EquinoxTextField"]},{"name":"fun ErrorUI(containerModifier: Modifier = Modifier, imageModifier: Modifier = Modifier, animations: UIAnimations? = null, textStyle: TextStyle = TextStyle.Default, errorIcon: ImageVector = Icons.Default.Error, errorColor: Color = MaterialTheme.colorScheme.error, errorMessage: String, retryAction: () -> Unit? = null, retryText: String? = null)","description":"com.tecknobit.equinoxcompose.components.ErrorUI","location":"-equinox--compose/com.tecknobit.equinoxcompose.components/-error-u-i.html","searchKeys":["ErrorUI","fun ErrorUI(containerModifier: Modifier = Modifier, imageModifier: Modifier = Modifier, animations: UIAnimations? = null, textStyle: TextStyle = TextStyle.Default, errorIcon: ImageVector = Icons.Default.Error, errorColor: Color = MaterialTheme.colorScheme.error, errorMessage: String, retryAction: () -> Unit? = null, retryText: String? = null)","com.tecknobit.equinoxcompose.components.ErrorUI"]},{"name":"fun ErrorUI(containerModifier: Modifier = Modifier, imageModifier: Modifier = Modifier, animations: UIAnimations? = null, textStyle: TextStyle = TextStyle.Default, errorIcon: ImageVector = Icons.Default.Error, errorColor: Color = MaterialTheme.colorScheme.error, errorMessage: StringResource = Res.string.an_error_occurred, retryAction: () -> Unit? = null, retryText: StringResource = Res.string.retry)","description":"com.tecknobit.equinoxcompose.components.ErrorUI","location":"-equinox--compose/com.tecknobit.equinoxcompose.components/-error-u-i.html","searchKeys":["ErrorUI","fun ErrorUI(containerModifier: Modifier = Modifier, imageModifier: Modifier = Modifier, animations: UIAnimations? = null, textStyle: TextStyle = TextStyle.Default, errorIcon: ImageVector = Icons.Default.Error, errorColor: Color = MaterialTheme.colorScheme.error, errorMessage: StringResource = Res.string.an_error_occurred, retryAction: () -> Unit? = null, retryText: StringResource = Res.string.retry)","com.tecknobit.equinoxcompose.components.ErrorUI"]},{"name":"fun ExpandableText(containerModifier: Modifier = Modifier, textModifier: Modifier = Modifier, textStyle: TextStyle = TextStyle.Default, text: String, maxLines: Int = 5, expandedMaxLines: Int = Int.MAX_VALUE, overflow: TextOverflow = TextOverflow.Ellipsis, iconSize: Dp = 30.dp, expandedIcon: ImageVector = Outlined.ArrowCircleUp, collapsedIcon: ImageVector = Outlined.ArrowCircleDown)","description":"com.tecknobit.equinoxcompose.components.ExpandableText","location":"-equinox--compose/com.tecknobit.equinoxcompose.components/-expandable-text.html","searchKeys":["ExpandableText","fun ExpandableText(containerModifier: Modifier = Modifier, textModifier: Modifier = Modifier, textStyle: TextStyle = TextStyle.Default, text: String, maxLines: Int = 5, expandedMaxLines: Int = Int.MAX_VALUE, overflow: TextOverflow = TextOverflow.Ellipsis, iconSize: Dp = 30.dp, expandedIcon: ImageVector = Outlined.ArrowCircleUp, collapsedIcon: ImageVector = Outlined.ArrowCircleDown)","com.tecknobit.equinoxcompose.components.ExpandableText"]},{"name":"fun ExpandableText(containerModifier: Modifier = Modifier, textModifier: Modifier = Modifier, textStyle: TextStyle = TextStyle.Default, text: StringResource, maxLines: Int = 5, expandedMaxLines: Int = Int.MAX_VALUE, overflow: TextOverflow = TextOverflow.Ellipsis, iconSize: Dp = 30.dp, expandedIcon: ImageVector = Outlined.ArrowCircleUp, collapsedIcon: ImageVector = Outlined.ArrowCircleDown)","description":"com.tecknobit.equinoxcompose.components.ExpandableText","location":"-equinox--compose/com.tecknobit.equinoxcompose.components/-expandable-text.html","searchKeys":["ExpandableText","fun ExpandableText(containerModifier: Modifier = Modifier, textModifier: Modifier = Modifier, textStyle: TextStyle = TextStyle.Default, text: StringResource, maxLines: Int = 5, expandedMaxLines: Int = Int.MAX_VALUE, overflow: TextOverflow = TextOverflow.Ellipsis, iconSize: Dp = 30.dp, expandedIcon: ImageVector = Outlined.ArrowCircleUp, collapsedIcon: ImageVector = Outlined.ArrowCircleDown)","com.tecknobit.equinoxcompose.components.ExpandableText"]},{"name":"fun LoadingItemUI(containerModifier: Modifier = Modifier, animations: UIAnimations? = null, textStyle: TextStyle = TextStyle.Default, loadingRoutine: () -> Boolean, contentLoaded: () -> Unit, themeColor: Color = MaterialTheme.colorScheme.primary, loadingIndicator: () -> Unit = {\n        Surface {\n            Column (\n                modifier = containerModifier\n                    .fillMaxSize(),\n                horizontalAlignment = Alignment.CenterHorizontally,\n                verticalArrangement = Arrangement.Center\n            ) {\n                CircularProgressIndicator(\n                    modifier = Modifier\n                        .size(85.dp),\n                    strokeWidth = 8.dp\n                )\n                Text(\n                    modifier = Modifier\n                        .padding(\n                            top = 16.dp\n                        ),\n                    style = textStyle,\n                    text = stringResource(Res.string.loading_data),\n                    color = themeColor\n                )\n            }\n        }\n    })","description":"com.tecknobit.equinoxcompose.components.LoadingItemUI","location":"-equinox--compose/com.tecknobit.equinoxcompose.components/-loading-item-u-i.html","searchKeys":["LoadingItemUI","fun LoadingItemUI(containerModifier: Modifier = Modifier, animations: UIAnimations? = null, textStyle: TextStyle = TextStyle.Default, loadingRoutine: () -> Boolean, contentLoaded: () -> Unit, themeColor: Color = MaterialTheme.colorScheme.primary, loadingIndicator: () -> Unit = {\n        Surface {\n            Column (\n                modifier = containerModifier\n                    .fillMaxSize(),\n                horizontalAlignment = Alignment.CenterHorizontally,\n                verticalArrangement = Arrangement.Center\n            ) {\n                CircularProgressIndicator(\n                    modifier = Modifier\n                        .size(85.dp),\n                    strokeWidth = 8.dp\n                )\n                Text(\n                    modifier = Modifier\n                        .padding(\n                            top = 16.dp\n                        ),\n                    style = textStyle,\n                    text = stringResource(Res.string.loading_data),\n                    color = themeColor\n                )\n            }\n        }\n    })","com.tecknobit.equinoxcompose.components.LoadingItemUI"]},{"name":"fun ManagedContent(content: () -> Unit, viewModel: EquinoxViewModel, loadingRoutine: () -> Boolean? = null, serverOfflineRetryText: String? = null, serverOfflineRetryAction: () -> Unit? = null, noInternetConnectionRetryText: String? = null, noInternetConnectionRetryAction: () -> Unit? = null)","description":"com.tecknobit.equinoxcompose.helpers.session.ManagedContent","location":"-equinox--compose/com.tecknobit.equinoxcompose.helpers.session/-managed-content.html","searchKeys":["ManagedContent","fun ManagedContent(content: () -> Unit, viewModel: EquinoxViewModel, loadingRoutine: () -> Boolean? = null, serverOfflineRetryText: String? = null, serverOfflineRetryAction: () -> Unit? = null, noInternetConnectionRetryText: String? = null, noInternetConnectionRetryAction: () -> Unit? = null)","com.tecknobit.equinoxcompose.helpers.session.ManagedContent"]},{"name":"fun Modifier.colorOneSideBorder(borderToColor: BorderToColor = START, width: Dp, color: Color, shape: Shape = RectangleShape): Modifier","description":"com.tecknobit.equinoxcompose.utilities.colorOneSideBorder","location":"-equinox--compose/com.tecknobit.equinoxcompose.utilities/color-one-side-border.html","searchKeys":["colorOneSideBorder","fun Modifier.colorOneSideBorder(borderToColor: BorderToColor = START, width: Dp, color: Color, shape: Shape = RectangleShape): Modifier","com.tecknobit.equinoxcompose.utilities.colorOneSideBorder"]},{"name":"fun Modifier.disableWritingModeOnFocusGain(): Modifier","description":"com.tecknobit.equinoxcompose.components.disableWritingModeOnFocusGain","location":"-equinox--compose/com.tecknobit.equinoxcompose.components/disable-writing-mode-on-focus-gain.html","searchKeys":["disableWritingModeOnFocusGain","fun Modifier.disableWritingModeOnFocusGain(): Modifier","com.tecknobit.equinoxcompose.components.disableWritingModeOnFocusGain"]},{"name":"fun Modifier.disableWritingModeOnTap(): Modifier","description":"com.tecknobit.equinoxcompose.components.disableWritingModeOnTap","location":"-equinox--compose/com.tecknobit.equinoxcompose.components/disable-writing-mode-on-tap.html","searchKeys":["disableWritingModeOnTap","fun Modifier.disableWritingModeOnTap(): Modifier","com.tecknobit.equinoxcompose.components.disableWritingModeOnTap"]},{"name":"fun ShowContent()","description":"com.tecknobit.equinoxcompose.helpers.session.EquinoxScreen.ShowContent","location":"-equinox--compose/com.tecknobit.equinoxcompose.helpers.session/-equinox-screen/-show-content.html","searchKeys":["ShowContent","fun ShowContent()","com.tecknobit.equinoxcompose.helpers.session.EquinoxScreen.ShowContent"]},{"name":"fun SplitText(columnModifier: Modifier = Modifier, rowModifier: Modifier = Modifier, splitsTextState: SplitTextState, spacingBetweenBoxes: Dp = 10.dp, boxShape: Shape = CardDefaults.shape, boxTextStyle: TextStyle = TextStyle(\n        fontSize = 30.sp,\n        fontWeight = FontWeight.Bold,\n        textAlign = TextAlign.Center\n    ), infoText: InfoText? = null)","description":"com.tecknobit.equinoxcompose.components.splittext.SplitText","location":"-equinox--compose/com.tecknobit.equinoxcompose.components.splittext/-split-text.html","searchKeys":["SplitText","fun SplitText(columnModifier: Modifier = Modifier, rowModifier: Modifier = Modifier, splitsTextState: SplitTextState, spacingBetweenBoxes: Dp = 10.dp, boxShape: Shape = CardDefaults.shape, boxTextStyle: TextStyle = TextStyle(\n        fontSize = 30.sp,\n        fontWeight = FontWeight.Bold,\n        textAlign = TextAlign.Center\n    ), infoText: InfoText? = null)","com.tecknobit.equinoxcompose.components.splittext.SplitText"]},{"name":"fun String.toColor(): Color","description":"com.tecknobit.equinoxcompose.utilities.toColor","location":"-equinox--compose/com.tecknobit.equinoxcompose.utilities/to-color.html","searchKeys":["toColor","fun String.toColor(): Color","com.tecknobit.equinoxcompose.utilities.toColor"]},{"name":"fun TabSelector(modifier: Modifier = Modifier, state: TabSelectorState, tabs: List<TabDetails>, initialTabShape: Shape = RoundedCornerShape(\n        topStart = 0.dp,\n        bottomStart = 10.dp\n    ), middleShape: Shape = RectangleShape, lastTabShape: Shape = RoundedCornerShape(\n        topEnd = 0.dp,\n        bottomEnd = 10.dp\n    ), swipingEnabled: Boolean = true, tabContent: (TabDetails, Int) -> Unit)","description":"com.tecknobit.equinoxcompose.components.tabselector.TabSelector","location":"-equinox--compose/com.tecknobit.equinoxcompose.components.tabselector/-tab-selector.html","searchKeys":["TabSelector","fun TabSelector(modifier: Modifier = Modifier, state: TabSelectorState, tabs: List<TabDetails>, initialTabShape: Shape = RoundedCornerShape(\n        topStart = 0.dp,\n        bottomStart = 10.dp\n    ), middleShape: Shape = RectangleShape, lastTabShape: Shape = RoundedCornerShape(\n        topEnd = 0.dp,\n        bottomEnd = 10.dp\n    ), swipingEnabled: Boolean = true, tabContent: (TabDetails, Int) -> Unit)","com.tecknobit.equinoxcompose.components.tabselector.TabSelector"]},{"name":"fun TextDivider(containerModifier: Modifier = Modifier, textModifier: Modifier = Modifier, fillMaxWidth: Boolean = true, thickness: Dp = DividerDefaults.Thickness, dividerColor: Color = DividerDefaults.color, text: String, textStyle: TextStyle = TextStyle.Default)","description":"com.tecknobit.equinoxcompose.components.TextDivider","location":"-equinox--compose/com.tecknobit.equinoxcompose.components/-text-divider.html","searchKeys":["TextDivider","fun TextDivider(containerModifier: Modifier = Modifier, textModifier: Modifier = Modifier, fillMaxWidth: Boolean = true, thickness: Dp = DividerDefaults.Thickness, dividerColor: Color = DividerDefaults.color, text: String, textStyle: TextStyle = TextStyle.Default)","com.tecknobit.equinoxcompose.components.TextDivider"]},{"name":"fun TextDivider(containerModifier: Modifier = Modifier, textModifier: Modifier = Modifier, fillMaxWidth: Boolean = true, thickness: Dp = DividerDefaults.Thickness, dividerColor: Color = DividerDefaults.color, text: StringResource, textStyle: TextStyle = TextStyle.Default)","description":"com.tecknobit.equinoxcompose.components.TextDivider","location":"-equinox--compose/com.tecknobit.equinoxcompose.components/-text-divider.html","searchKeys":["TextDivider","fun TextDivider(containerModifier: Modifier = Modifier, textModifier: Modifier = Modifier, fillMaxWidth: Boolean = true, thickness: Dp = DividerDefaults.Thickness, dividerColor: Color = DividerDefaults.color, text: StringResource, textStyle: TextStyle = TextStyle.Default)","com.tecknobit.equinoxcompose.components.TextDivider"]},{"name":"fun Tile(modifier: Modifier = Modifier, size: Dp = 115.dp, shape: Shape = RoundedCornerShape(\n        size = 15.dp\n    ), containerColor: Color = MaterialTheme.colorScheme.primary, contentColor: Color = contentColorFor(containerColor), elevation: Dp = 3.dp, icon: ImageVector, iconSize: Dp = 65.dp, text: String, fontWeight: FontWeight = FontWeight.Bold, textStyle: TextStyle = TextStyle.Default.merge(\n        color = contentColor,\n        fontWeight = fontWeight\n    ), onClick: () -> Unit)","description":"com.tecknobit.equinoxcompose.components.Tile","location":"-equinox--compose/com.tecknobit.equinoxcompose.components/-tile.html","searchKeys":["Tile","fun Tile(modifier: Modifier = Modifier, size: Dp = 115.dp, shape: Shape = RoundedCornerShape(\n        size = 15.dp\n    ), containerColor: Color = MaterialTheme.colorScheme.primary, contentColor: Color = contentColorFor(containerColor), elevation: Dp = 3.dp, icon: ImageVector, iconSize: Dp = 65.dp, text: String, fontWeight: FontWeight = FontWeight.Bold, textStyle: TextStyle = TextStyle.Default.merge(\n        color = contentColor,\n        fontWeight = fontWeight\n    ), onClick: () -> Unit)","com.tecknobit.equinoxcompose.components.Tile"]},{"name":"fun Tile(modifier: Modifier = Modifier, size: Dp = 115.dp, shape: Shape = RoundedCornerShape(\n        size = 15.dp\n    ), containerColor: Color = MaterialTheme.colorScheme.primary, contentColor: Color = contentColorFor(containerColor), elevation: Dp = 3.dp, icon: ImageVector, iconSize: Dp = 65.dp, text: StringResource, fontWeight: FontWeight = FontWeight.Bold, textStyle: TextStyle = TextStyle.Default.merge(\n        color = contentColor,\n        fontWeight = fontWeight\n    ), onClick: () -> Unit)","description":"com.tecknobit.equinoxcompose.components.Tile","location":"-equinox--compose/com.tecknobit.equinoxcompose.components/-tile.html","searchKeys":["Tile","fun Tile(modifier: Modifier = Modifier, size: Dp = 115.dp, shape: Shape = RoundedCornerShape(\n        size = 15.dp\n    ), containerColor: Color = MaterialTheme.colorScheme.primary, contentColor: Color = contentColorFor(containerColor), elevation: Dp = 3.dp, icon: ImageVector, iconSize: Dp = 65.dp, text: StringResource, fontWeight: FontWeight = FontWeight.Bold, textStyle: TextStyle = TextStyle.Default.merge(\n        color = contentColor,\n        fontWeight = fontWeight\n    ), onClick: () -> Unit)","com.tecknobit.equinoxcompose.components.Tile"]},{"name":"fun WriteableText(isInWritingMode: MutableState<Boolean>, writableModifier: Modifier = Modifier, writeableTextColors: TextFieldColors = TextFieldDefaults.colors(\n        unfocusedContainerColor = MaterialTheme.colorScheme.primary,\n        focusedContainerColor = MaterialTheme.colorScheme.primary,\n        focusedIndicatorColor = MaterialTheme.colorScheme.inversePrimary,\n        unfocusedIndicatorColor = MaterialTheme.colorScheme.primary,\n        cursorColor = MaterialTheme.colorScheme.inversePrimary,\n        focusedTextColor = Color.White,\n        unfocusedTextColor = Color.White\n    ), writeableTextWidth: Dp = 280.dp, writeableText: MutableState<String>, writeableTextStyle: TextStyle = LocalTextStyle.current.merge(\n        fontSize = 20.sp\n    ), onWriting: (String) -> Unit = {\n        writeableText.value = it\n    }, placeholder: String, placeholderStyle: TextStyle = LocalTextStyle.current.merge(\n        fontSize = 20.sp\n    ), displayedTextModifier: Modifier = Modifier, displayedText: String = writeableText.value, displayedTextStyle: TextStyle = LocalTextStyle.current.merge(\n        fontSize = 20.sp\n    ), changeEditModeClickingOnSimpleText: Boolean = true)","description":"com.tecknobit.equinoxcompose.components.WriteableText","location":"-equinox--compose/com.tecknobit.equinoxcompose.components/-writeable-text.html","searchKeys":["WriteableText","fun WriteableText(isInWritingMode: MutableState<Boolean>, writableModifier: Modifier = Modifier, writeableTextColors: TextFieldColors = TextFieldDefaults.colors(\n        unfocusedContainerColor = MaterialTheme.colorScheme.primary,\n        focusedContainerColor = MaterialTheme.colorScheme.primary,\n        focusedIndicatorColor = MaterialTheme.colorScheme.inversePrimary,\n        unfocusedIndicatorColor = MaterialTheme.colorScheme.primary,\n        cursorColor = MaterialTheme.colorScheme.inversePrimary,\n        focusedTextColor = Color.White,\n        unfocusedTextColor = Color.White\n    ), writeableTextWidth: Dp = 280.dp, writeableText: MutableState<String>, writeableTextStyle: TextStyle = LocalTextStyle.current.merge(\n        fontSize = 20.sp\n    ), onWriting: (String) -> Unit = {\n        writeableText.value = it\n    }, placeholder: String, placeholderStyle: TextStyle = LocalTextStyle.current.merge(\n        fontSize = 20.sp\n    ), displayedTextModifier: Modifier = Modifier, displayedText: String = writeableText.value, displayedTextStyle: TextStyle = LocalTextStyle.current.merge(\n        fontSize = 20.sp\n    ), changeEditModeClickingOnSimpleText: Boolean = true)","com.tecknobit.equinoxcompose.components.WriteableText"]},{"name":"fun WriteableText(isInWritingMode: MutableState<Boolean>, writableModifier: Modifier = Modifier, writeableTextColors: TextFieldColors = TextFieldDefaults.colors(\n        unfocusedContainerColor = MaterialTheme.colorScheme.primary,\n        focusedContainerColor = MaterialTheme.colorScheme.primary,\n        focusedIndicatorColor = MaterialTheme.colorScheme.inversePrimary,\n        unfocusedIndicatorColor = MaterialTheme.colorScheme.primary,\n        cursorColor = MaterialTheme.colorScheme.inversePrimary,\n        focusedTextColor = Color.White,\n        unfocusedTextColor = Color.White\n    ), writeableTextWidth: Dp = 280.dp, writeableText: MutableState<String>, writeableTextStyle: TextStyle = LocalTextStyle.current.merge(\n        fontSize = 20.sp\n    ), onWriting: (String) -> Unit = {\n        writeableText.value = it\n    }, placeholder: StringResource, placeholderStyle: TextStyle = LocalTextStyle.current.merge(\n        fontSize = 20.sp\n    ), displayedTextModifier: Modifier = Modifier, displayedText: String = writeableText.value, displayedTextStyle: TextStyle = LocalTextStyle.current.merge(\n        fontSize = 20.sp\n    ), changeEditModeClickingOnSimpleText: Boolean = true)","description":"com.tecknobit.equinoxcompose.components.WriteableText","location":"-equinox--compose/com.tecknobit.equinoxcompose.components/-writeable-text.html","searchKeys":["WriteableText","fun WriteableText(isInWritingMode: MutableState<Boolean>, writableModifier: Modifier = Modifier, writeableTextColors: TextFieldColors = TextFieldDefaults.colors(\n        unfocusedContainerColor = MaterialTheme.colorScheme.primary,\n        focusedContainerColor = MaterialTheme.colorScheme.primary,\n        focusedIndicatorColor = MaterialTheme.colorScheme.inversePrimary,\n        unfocusedIndicatorColor = MaterialTheme.colorScheme.primary,\n        cursorColor = MaterialTheme.colorScheme.inversePrimary,\n        focusedTextColor = Color.White,\n        unfocusedTextColor = Color.White\n    ), writeableTextWidth: Dp = 280.dp, writeableText: MutableState<String>, writeableTextStyle: TextStyle = LocalTextStyle.current.merge(\n        fontSize = 20.sp\n    ), onWriting: (String) -> Unit = {\n        writeableText.value = it\n    }, placeholder: StringResource, placeholderStyle: TextStyle = LocalTextStyle.current.merge(\n        fontSize = 20.sp\n    ), displayedTextModifier: Modifier = Modifier, displayedText: String = writeableText.value, displayedTextStyle: TextStyle = LocalTextStyle.current.merge(\n        fontSize = 20.sp\n    ), changeEditModeClickingOnSimpleText: Boolean = true)","com.tecknobit.equinoxcompose.components.WriteableText"]},{"name":"fun auth()","description":"com.tecknobit.equinoxcompose.helpers.viewmodels.EquinoxAuthViewModel.auth","location":"-equinox--compose/com.tecknobit.equinoxcompose.helpers.viewmodels/-equinox-auth-view-model/auth.html","searchKeys":["auth","fun auth()","com.tecknobit.equinoxcompose.helpers.viewmodels.EquinoxAuthViewModel.auth"]},{"name":"fun changeEmail(onSuccess: () -> Unit)","description":"com.tecknobit.equinoxcompose.helpers.viewmodels.EquinoxProfileViewModel.changeEmail","location":"-equinox--compose/com.tecknobit.equinoxcompose.helpers.viewmodels/-equinox-profile-view-model/change-email.html","searchKeys":["changeEmail","fun changeEmail(onSuccess: () -> Unit)","com.tecknobit.equinoxcompose.helpers.viewmodels.EquinoxProfileViewModel.changeEmail"]},{"name":"fun changeLanguage(newLanguage: String, onSuccess: () -> Unit)","description":"com.tecknobit.equinoxcompose.helpers.viewmodels.EquinoxProfileViewModel.changeLanguage","location":"-equinox--compose/com.tecknobit.equinoxcompose.helpers.viewmodels/-equinox-profile-view-model/change-language.html","searchKeys":["changeLanguage","fun changeLanguage(newLanguage: String, onSuccess: () -> Unit)","com.tecknobit.equinoxcompose.helpers.viewmodels.EquinoxProfileViewModel.changeLanguage"]},{"name":"fun changePassword(onSuccess: () -> Unit)","description":"com.tecknobit.equinoxcompose.helpers.viewmodels.EquinoxProfileViewModel.changePassword","location":"-equinox--compose/com.tecknobit.equinoxcompose.helpers.viewmodels/-equinox-profile-view-model/change-password.html","searchKeys":["changePassword","fun changePassword(onSuccess: () -> Unit)","com.tecknobit.equinoxcompose.helpers.viewmodels.EquinoxProfileViewModel.changePassword"]},{"name":"fun changeProfilePic(imagePath: String, profilePic: MutableState<String>)","description":"com.tecknobit.equinoxcompose.helpers.viewmodels.EquinoxProfileViewModel.changeProfilePic","location":"-equinox--compose/com.tecknobit.equinoxcompose.helpers.viewmodels/-equinox-profile-view-model/change-profile-pic.html","searchKeys":["changeProfilePic","fun changeProfilePic(imagePath: String, profilePic: MutableState<String>)","com.tecknobit.equinoxcompose.helpers.viewmodels.EquinoxProfileViewModel.changeProfilePic"]},{"name":"fun changeTheme(newTheme: <Error class: unknown class>, onChange: () -> Unit)","description":"com.tecknobit.equinoxcompose.helpers.viewmodels.EquinoxProfileViewModel.changeTheme","location":"-equinox--compose/com.tecknobit.equinoxcompose.helpers.viewmodels/-equinox-profile-view-model/change-theme.html","searchKeys":["changeTheme","fun changeTheme(newTheme: <Error class: unknown class>, onChange: () -> Unit)","com.tecknobit.equinoxcompose.helpers.viewmodels.EquinoxProfileViewModel.changeTheme"]},{"name":"fun clearSession(onClear: () -> Unit)","description":"com.tecknobit.equinoxcompose.helpers.viewmodels.EquinoxProfileViewModel.clearSession","location":"-equinox--compose/com.tecknobit.equinoxcompose.helpers.viewmodels/-equinox-profile-view-model/clear-session.html","searchKeys":["clearSession","fun clearSession(onClear: () -> Unit)","com.tecknobit.equinoxcompose.helpers.viewmodels.EquinoxProfileViewModel.clearSession"]},{"name":"fun deleteAccount(onDelete: () -> Unit)","description":"com.tecknobit.equinoxcompose.helpers.viewmodels.EquinoxProfileViewModel.deleteAccount","location":"-equinox--compose/com.tecknobit.equinoxcompose.helpers.viewmodels/-equinox-profile-view-model/delete-account.html","searchKeys":["deleteAccount","fun deleteAccount(onDelete: () -> Unit)","com.tecknobit.equinoxcompose.helpers.viewmodels.EquinoxProfileViewModel.deleteAccount"]},{"name":"fun disableWritingMode()","description":"com.tecknobit.equinoxcompose.components.disableWritingMode","location":"-equinox--compose/com.tecknobit.equinoxcompose.components/disable-writing-mode.html","searchKeys":["disableWritingMode","fun disableWritingMode()","com.tecknobit.equinoxcompose.components.disableWritingMode"]},{"name":"fun enableWritingMode()","description":"com.tecknobit.equinoxcompose.components.enableWritingMode","location":"-equinox--compose/com.tecknobit.equinoxcompose.components/enable-writing-mode.html","searchKeys":["enableWritingMode","fun enableWritingMode()","com.tecknobit.equinoxcompose.components.enableWritingMode"]},{"name":"fun generateRandomColor(): Color","description":"com.tecknobit.equinoxcompose.utilities.generateRandomColor","location":"-equinox--compose/com.tecknobit.equinoxcompose.utilities/generate-random-color.html","searchKeys":["generateRandomColor","fun generateRandomColor(): Color","com.tecknobit.equinoxcompose.utilities.generateRandomColor"]},{"name":"fun get(): Context","description":"com.tecknobit.equinoxcompose.helpers.utils.AppContext.get","location":"-equinox--compose/com.tecknobit.equinoxcompose.helpers.utils/-app-context/get.html","searchKeys":["get","fun get(): Context","com.tecknobit.equinoxcompose.helpers.utils.AppContext.get"]},{"name":"fun getCompleteText(): String","description":"com.tecknobit.equinoxcompose.components.splittext.SplitTextState.getCompleteText","location":"-equinox--compose/com.tecknobit.equinoxcompose.components.splittext/-split-text-state/get-complete-text.html","searchKeys":["getCompleteText","fun getCompleteText(): String","com.tecknobit.equinoxcompose.components.splittext.SplitTextState.getCompleteText"]},{"name":"fun getCurrentActivity(): Activity?","description":"com.tecknobit.equinoxcompose.helpers.utils.ContextActivityProvider.getCurrentActivity","location":"-equinox--compose/com.tecknobit.equinoxcompose.helpers.utils/-context-activity-provider/get-current-activity.html","searchKeys":["getCurrentActivity","fun getCurrentActivity(): Activity?","com.tecknobit.equinoxcompose.helpers.utils.ContextActivityProvider.getCurrentActivity"]},{"name":"fun getCurrentSessionStatus(): SessionStatus","description":"com.tecknobit.equinoxcompose.helpers.session.getCurrentSessionStatus","location":"-equinox--compose/com.tecknobit.equinoxcompose.helpers.session/get-current-session-status.html","searchKeys":["getCurrentSessionStatus","fun getCurrentSessionStatus(): SessionStatus","com.tecknobit.equinoxcompose.helpers.session.getCurrentSessionStatus"]},{"name":"fun getSelectedTab(): Int","description":"com.tecknobit.equinoxcompose.components.tabselector.TabSelectorState.getSelectedTab","location":"-equinox--compose/com.tecknobit.equinoxcompose.components.tabselector/-tab-selector-state/get-selected-tab.html","searchKeys":["getSelectedTab","fun getSelectedTab(): Int","com.tecknobit.equinoxcompose.components.tabselector.TabSelectorState.getSelectedTab"]},{"name":"fun rememberSplitTextState(splits: Int): SplitTextState","description":"com.tecknobit.equinoxcompose.components.splittext.rememberSplitTextState","location":"-equinox--compose/com.tecknobit.equinoxcompose.components.splittext/remember-split-text-state.html","searchKeys":["rememberSplitTextState","fun rememberSplitTextState(splits: Int): SplitTextState","com.tecknobit.equinoxcompose.components.splittext.rememberSplitTextState"]},{"name":"fun rememberTabSelectorState(initialTabIndex: Int = 0): TabSelectorState","description":"com.tecknobit.equinoxcompose.components.tabselector.rememberTabSelectorState","location":"-equinox--compose/com.tecknobit.equinoxcompose.components.tabselector/remember-tab-selector-state.html","searchKeys":["rememberTabSelectorState","fun rememberTabSelectorState(initialTabIndex: Int = 0): TabSelectorState","com.tecknobit.equinoxcompose.components.tabselector.rememberTabSelectorState"]},{"name":"fun setCurrentActivity(activity: Activity)","description":"com.tecknobit.equinoxcompose.helpers.utils.ContextActivityProvider.setCurrentActivity","location":"-equinox--compose/com.tecknobit.equinoxcompose.helpers.utils/-context-activity-provider/set-current-activity.html","searchKeys":["setCurrentActivity","fun setCurrentActivity(activity: Activity)","com.tecknobit.equinoxcompose.helpers.utils.ContextActivityProvider.setCurrentActivity"]},{"name":"fun setHasBeenDisconnectedValue(hasBeenDisconnectedValue: Boolean)","description":"com.tecknobit.equinoxcompose.helpers.session.setHasBeenDisconnectedValue","location":"-equinox--compose/com.tecknobit.equinoxcompose.helpers.session/set-has-been-disconnected-value.html","searchKeys":["setHasBeenDisconnectedValue","fun setHasBeenDisconnectedValue(hasBeenDisconnectedValue: Boolean)","com.tecknobit.equinoxcompose.helpers.session.setHasBeenDisconnectedValue"]},{"name":"fun setServerOfflineValue(isServerOfflineValue: Boolean)","description":"com.tecknobit.equinoxcompose.helpers.session.setServerOfflineValue","location":"-equinox--compose/com.tecknobit.equinoxcompose.helpers.session/set-server-offline-value.html","searchKeys":["setServerOfflineValue","fun setServerOfflineValue(isServerOfflineValue: Boolean)","com.tecknobit.equinoxcompose.helpers.session.setServerOfflineValue"]},{"name":"fun setUp(context: Context)","description":"com.tecknobit.equinoxcompose.helpers.utils.AppContext.setUp","location":"-equinox--compose/com.tecknobit.equinoxcompose.helpers.utils/-app-context/set-up.html","searchKeys":["setUp","fun setUp(context: Context)","com.tecknobit.equinoxcompose.helpers.utils.AppContext.setUp"]},{"name":"fun setUpSession(serverOfflineMessage: String = stringResource(Res.string.server_currently_offline), serverOfflineIcon: ImageVector = Icons.Default.Warning, noInternetConnectionMessage: String = stringResource(Res.string.no_internet_connection), noInternetConnectionIcon: ImageVector = vectorResource(Res.drawable.no_internet), hasBeenDisconnectedAction: () -> Unit)","description":"com.tecknobit.equinoxcompose.helpers.session.setUpSession","location":"-equinox--compose/com.tecknobit.equinoxcompose.helpers.session/set-up-session.html","searchKeys":["setUpSession","fun setUpSession(serverOfflineMessage: String = stringResource(Res.string.server_currently_offline), serverOfflineIcon: ImageVector = Icons.Default.Warning, noInternetConnectionMessage: String = stringResource(Res.string.no_internet_connection), noInternetConnectionIcon: ImageVector = vectorResource(Res.drawable.no_internet), hasBeenDisconnectedAction: () -> Unit)","com.tecknobit.equinoxcompose.helpers.session.setUpSession"]},{"name":"fun setUpSession(sessionSetupValue: SessionSetup)","description":"com.tecknobit.equinoxcompose.helpers.session.setUpSession","location":"-equinox--compose/com.tecknobit.equinoxcompose.helpers.session/set-up-session.html","searchKeys":["setUpSession","fun setUpSession(sessionSetupValue: SessionSetup)","com.tecknobit.equinoxcompose.helpers.session.setUpSession"]},{"name":"fun showSnackbarMessage(helper: <Error class: unknown class>)","description":"com.tecknobit.equinoxcompose.helpers.viewmodels.EquinoxViewModel.showSnackbarMessage","location":"-equinox--compose/com.tecknobit.equinoxcompose.helpers.viewmodels/-equinox-view-model/show-snackbar-message.html","searchKeys":["showSnackbarMessage","fun showSnackbarMessage(helper: <Error class: unknown class>)","com.tecknobit.equinoxcompose.helpers.viewmodels.EquinoxViewModel.showSnackbarMessage"]},{"name":"fun showSnackbarMessage(message: String)","description":"com.tecknobit.equinoxcompose.helpers.viewmodels.EquinoxViewModel.showSnackbarMessage","location":"-equinox--compose/com.tecknobit.equinoxcompose.helpers.viewmodels/-equinox-view-model/show-snackbar-message.html","searchKeys":["showSnackbarMessage","fun showSnackbarMessage(message: String)","com.tecknobit.equinoxcompose.helpers.viewmodels.EquinoxViewModel.showSnackbarMessage"]},{"name":"fun valueOf(value: String): BorderToColor","description":"com.tecknobit.equinoxcompose.utilities.BorderToColor.valueOf","location":"-equinox--compose/com.tecknobit.equinoxcompose.utilities/-border-to-color/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): BorderToColor","com.tecknobit.equinoxcompose.utilities.BorderToColor.valueOf"]},{"name":"fun valueOf(value: String): EquinoxScreen.EquinoxScreenEvent","description":"com.tecknobit.equinoxcompose.helpers.session.EquinoxScreen.EquinoxScreenEvent.valueOf","location":"-equinox--compose/com.tecknobit.equinoxcompose.helpers.session/-equinox-screen/-equinox-screen-event/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): EquinoxScreen.EquinoxScreenEvent","com.tecknobit.equinoxcompose.helpers.session.EquinoxScreen.EquinoxScreenEvent.valueOf"]},{"name":"fun valueOf(value: String): SessionStatus","description":"com.tecknobit.equinoxcompose.helpers.session.SessionStatus.valueOf","location":"-equinox--compose/com.tecknobit.equinoxcompose.helpers.session/-session-status/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): SessionStatus","com.tecknobit.equinoxcompose.helpers.session.SessionStatus.valueOf"]},{"name":"fun values(): Array<BorderToColor>","description":"com.tecknobit.equinoxcompose.utilities.BorderToColor.values","location":"-equinox--compose/com.tecknobit.equinoxcompose.utilities/-border-to-color/values.html","searchKeys":["values","fun values(): Array<BorderToColor>","com.tecknobit.equinoxcompose.utilities.BorderToColor.values"]},{"name":"fun values(): Array<EquinoxScreen.EquinoxScreenEvent>","description":"com.tecknobit.equinoxcompose.helpers.session.EquinoxScreen.EquinoxScreenEvent.values","location":"-equinox--compose/com.tecknobit.equinoxcompose.helpers.session/-equinox-screen/-equinox-screen-event/values.html","searchKeys":["values","fun values(): Array<EquinoxScreen.EquinoxScreenEvent>","com.tecknobit.equinoxcompose.helpers.session.EquinoxScreen.EquinoxScreenEvent.values"]},{"name":"fun values(): Array<SessionStatus>","description":"com.tecknobit.equinoxcompose.helpers.session.SessionStatus.values","location":"-equinox--compose/com.tecknobit.equinoxcompose.helpers.session/-session-status/values.html","searchKeys":["values","fun values(): Array<SessionStatus>","com.tecknobit.equinoxcompose.helpers.session.SessionStatus.values"]},{"name":"lateinit var email: MutableState<String>","description":"com.tecknobit.equinoxcompose.helpers.viewmodels.EquinoxAuthViewModel.email","location":"-equinox--compose/com.tecknobit.equinoxcompose.helpers.viewmodels/-equinox-auth-view-model/email.html","searchKeys":["email","lateinit var email: MutableState<String>","com.tecknobit.equinoxcompose.helpers.viewmodels.EquinoxAuthViewModel.email"]},{"name":"lateinit var emailError: MutableState<Boolean>","description":"com.tecknobit.equinoxcompose.helpers.viewmodels.EquinoxAuthViewModel.emailError","location":"-equinox--compose/com.tecknobit.equinoxcompose.helpers.viewmodels/-equinox-auth-view-model/email-error.html","searchKeys":["emailError","lateinit var emailError: MutableState<Boolean>","com.tecknobit.equinoxcompose.helpers.viewmodels.EquinoxAuthViewModel.emailError"]},{"name":"lateinit var host: MutableState<String>","description":"com.tecknobit.equinoxcompose.helpers.viewmodels.EquinoxAuthViewModel.host","location":"-equinox--compose/com.tecknobit.equinoxcompose.helpers.viewmodels/-equinox-auth-view-model/host.html","searchKeys":["host","lateinit var host: MutableState<String>","com.tecknobit.equinoxcompose.helpers.viewmodels.EquinoxAuthViewModel.host"]},{"name":"lateinit var hostError: MutableState<Boolean>","description":"com.tecknobit.equinoxcompose.helpers.viewmodels.EquinoxAuthViewModel.hostError","location":"-equinox--compose/com.tecknobit.equinoxcompose.helpers.viewmodels/-equinox-auth-view-model/host-error.html","searchKeys":["hostError","lateinit var hostError: MutableState<Boolean>","com.tecknobit.equinoxcompose.helpers.viewmodels.EquinoxAuthViewModel.hostError"]},{"name":"lateinit var isSignUp: MutableState<Boolean>","description":"com.tecknobit.equinoxcompose.helpers.viewmodels.EquinoxAuthViewModel.isSignUp","location":"-equinox--compose/com.tecknobit.equinoxcompose.helpers.viewmodels/-equinox-auth-view-model/is-sign-up.html","searchKeys":["isSignUp","lateinit var isSignUp: MutableState<Boolean>","com.tecknobit.equinoxcompose.helpers.viewmodels.EquinoxAuthViewModel.isSignUp"]},{"name":"lateinit var name: MutableState<String>","description":"com.tecknobit.equinoxcompose.helpers.viewmodels.EquinoxAuthViewModel.name","location":"-equinox--compose/com.tecknobit.equinoxcompose.helpers.viewmodels/-equinox-auth-view-model/name.html","searchKeys":["name","lateinit var name: MutableState<String>","com.tecknobit.equinoxcompose.helpers.viewmodels.EquinoxAuthViewModel.name"]},{"name":"lateinit var nameError: MutableState<Boolean>","description":"com.tecknobit.equinoxcompose.helpers.viewmodels.EquinoxAuthViewModel.nameError","location":"-equinox--compose/com.tecknobit.equinoxcompose.helpers.viewmodels/-equinox-auth-view-model/name-error.html","searchKeys":["nameError","lateinit var nameError: MutableState<Boolean>","com.tecknobit.equinoxcompose.helpers.viewmodels.EquinoxAuthViewModel.nameError"]},{"name":"lateinit var newEmail: MutableState<String>","description":"com.tecknobit.equinoxcompose.helpers.viewmodels.EquinoxProfileViewModel.newEmail","location":"-equinox--compose/com.tecknobit.equinoxcompose.helpers.viewmodels/-equinox-profile-view-model/new-email.html","searchKeys":["newEmail","lateinit var newEmail: MutableState<String>","com.tecknobit.equinoxcompose.helpers.viewmodels.EquinoxProfileViewModel.newEmail"]},{"name":"lateinit var newEmailError: MutableState<Boolean>","description":"com.tecknobit.equinoxcompose.helpers.viewmodels.EquinoxProfileViewModel.newEmailError","location":"-equinox--compose/com.tecknobit.equinoxcompose.helpers.viewmodels/-equinox-profile-view-model/new-email-error.html","searchKeys":["newEmailError","lateinit var newEmailError: MutableState<Boolean>","com.tecknobit.equinoxcompose.helpers.viewmodels.EquinoxProfileViewModel.newEmailError"]},{"name":"lateinit var newPassword: MutableState<String>","description":"com.tecknobit.equinoxcompose.helpers.viewmodels.EquinoxProfileViewModel.newPassword","location":"-equinox--compose/com.tecknobit.equinoxcompose.helpers.viewmodels/-equinox-profile-view-model/new-password.html","searchKeys":["newPassword","lateinit var newPassword: MutableState<String>","com.tecknobit.equinoxcompose.helpers.viewmodels.EquinoxProfileViewModel.newPassword"]},{"name":"lateinit var newPasswordError: MutableState<Boolean>","description":"com.tecknobit.equinoxcompose.helpers.viewmodels.EquinoxProfileViewModel.newPasswordError","location":"-equinox--compose/com.tecknobit.equinoxcompose.helpers.viewmodels/-equinox-profile-view-model/new-password-error.html","searchKeys":["newPasswordError","lateinit var newPasswordError: MutableState<Boolean>","com.tecknobit.equinoxcompose.helpers.viewmodels.EquinoxProfileViewModel.newPasswordError"]},{"name":"lateinit var password: MutableState<String>","description":"com.tecknobit.equinoxcompose.helpers.viewmodels.EquinoxAuthViewModel.password","location":"-equinox--compose/com.tecknobit.equinoxcompose.helpers.viewmodels/-equinox-auth-view-model/password.html","searchKeys":["password","lateinit var password: MutableState<String>","com.tecknobit.equinoxcompose.helpers.viewmodels.EquinoxAuthViewModel.password"]},{"name":"lateinit var passwordError: MutableState<Boolean>","description":"com.tecknobit.equinoxcompose.helpers.viewmodels.EquinoxAuthViewModel.passwordError","location":"-equinox--compose/com.tecknobit.equinoxcompose.helpers.viewmodels/-equinox-auth-view-model/password-error.html","searchKeys":["passwordError","lateinit var passwordError: MutableState<Boolean>","com.tecknobit.equinoxcompose.helpers.viewmodels.EquinoxAuthViewModel.passwordError"]},{"name":"lateinit var serverSecret: MutableState<String>","description":"com.tecknobit.equinoxcompose.helpers.viewmodels.EquinoxAuthViewModel.serverSecret","location":"-equinox--compose/com.tecknobit.equinoxcompose.helpers.viewmodels/-equinox-auth-view-model/server-secret.html","searchKeys":["serverSecret","lateinit var serverSecret: MutableState<String>","com.tecknobit.equinoxcompose.helpers.viewmodels.EquinoxAuthViewModel.serverSecret"]},{"name":"lateinit var serverSecretError: MutableState<Boolean>","description":"com.tecknobit.equinoxcompose.helpers.viewmodels.EquinoxAuthViewModel.serverSecretError","location":"-equinox--compose/com.tecknobit.equinoxcompose.helpers.viewmodels/-equinox-auth-view-model/server-secret-error.html","searchKeys":["serverSecretError","lateinit var serverSecretError: MutableState<Boolean>","com.tecknobit.equinoxcompose.helpers.viewmodels.EquinoxAuthViewModel.serverSecretError"]},{"name":"lateinit var surname: MutableState<String>","description":"com.tecknobit.equinoxcompose.helpers.viewmodels.EquinoxAuthViewModel.surname","location":"-equinox--compose/com.tecknobit.equinoxcompose.helpers.viewmodels/-equinox-auth-view-model/surname.html","searchKeys":["surname","lateinit var surname: MutableState<String>","com.tecknobit.equinoxcompose.helpers.viewmodels.EquinoxAuthViewModel.surname"]},{"name":"lateinit var surnameError: MutableState<Boolean>","description":"com.tecknobit.equinoxcompose.helpers.viewmodels.EquinoxAuthViewModel.surnameError","location":"-equinox--compose/com.tecknobit.equinoxcompose.helpers.viewmodels/-equinox-auth-view-model/surname-error.html","searchKeys":["surnameError","lateinit var surnameError: MutableState<Boolean>","com.tecknobit.equinoxcompose.helpers.viewmodels.EquinoxAuthViewModel.surnameError"]},{"name":"object AppContext","description":"com.tecknobit.equinoxcompose.helpers.utils.AppContext","location":"-equinox--compose/com.tecknobit.equinoxcompose.helpers.utils/-app-context/index.html","searchKeys":["AppContext","object AppContext","com.tecknobit.equinoxcompose.helpers.utils.AppContext"]},{"name":"object ContextActivityProvider","description":"com.tecknobit.equinoxcompose.helpers.utils.ContextActivityProvider","location":"-equinox--compose/com.tecknobit.equinoxcompose.helpers.utils/-context-activity-provider/index.html","searchKeys":["ContextActivityProvider","object ContextActivityProvider","com.tecknobit.equinoxcompose.helpers.utils.ContextActivityProvider"]},{"name":"open class EquinoxProfileViewModel(val snackbarHostState: SnackbarHostState, val requester: <Error class: unknown class>, val localUser: <Error class: unknown class>) : EquinoxViewModel","description":"com.tecknobit.equinoxcompose.helpers.viewmodels.EquinoxProfileViewModel","location":"-equinox--compose/com.tecknobit.equinoxcompose.helpers.viewmodels/-equinox-profile-view-model/index.html","searchKeys":["EquinoxProfileViewModel","open class EquinoxProfileViewModel(val snackbarHostState: SnackbarHostState, val requester: <Error class: unknown class>, val localUser: <Error class: unknown class>) : EquinoxViewModel","com.tecknobit.equinoxcompose.helpers.viewmodels.EquinoxProfileViewModel"]},{"name":"open fun canRefresherStart(): Boolean","description":"com.tecknobit.equinoxcompose.helpers.viewmodels.EquinoxViewModel.canRefresherStart","location":"-equinox--compose/com.tecknobit.equinoxcompose.helpers.viewmodels/-equinox-view-model/can-refresher-start.html","searchKeys":["canRefresherStart","open fun canRefresherStart(): Boolean","com.tecknobit.equinoxcompose.helpers.viewmodels.EquinoxViewModel.canRefresherStart"]},{"name":"open fun continueToFetch(currentContext: <Error class: unknown class><out <Error class: unknown class>>): Boolean","description":"com.tecknobit.equinoxcompose.helpers.viewmodels.EquinoxViewModel.continueToFetch","location":"-equinox--compose/com.tecknobit.equinoxcompose.helpers.viewmodels/-equinox-view-model/continue-to-fetch.html","searchKeys":["continueToFetch","open fun continueToFetch(currentContext: <Error class: unknown class><out <Error class: unknown class>>): Boolean","com.tecknobit.equinoxcompose.helpers.viewmodels.EquinoxViewModel.continueToFetch"]},{"name":"open fun execRefreshingRoutine(currentContext: <Error class: unknown class><out <Error class: unknown class>>, routine: () -> Unit, repeatRoutine: Boolean, refreshDelay: Long)","description":"com.tecknobit.equinoxcompose.helpers.viewmodels.EquinoxViewModel.execRefreshingRoutine","location":"-equinox--compose/com.tecknobit.equinoxcompose.helpers.viewmodels/-equinox-view-model/exec-refreshing-routine.html","searchKeys":["execRefreshingRoutine","open fun execRefreshingRoutine(currentContext: <Error class: unknown class><out <Error class: unknown class>>, routine: () -> Unit, repeatRoutine: Boolean, refreshDelay: Long)","com.tecknobit.equinoxcompose.helpers.viewmodels.EquinoxViewModel.execRefreshingRoutine"]},{"name":"open fun restartRefresher()","description":"com.tecknobit.equinoxcompose.helpers.viewmodels.EquinoxViewModel.restartRefresher","location":"-equinox--compose/com.tecknobit.equinoxcompose.helpers.viewmodels/-equinox-view-model/restart-refresher.html","searchKeys":["restartRefresher","open fun restartRefresher()","com.tecknobit.equinoxcompose.helpers.viewmodels.EquinoxViewModel.restartRefresher"]},{"name":"open fun suspendRefresher()","description":"com.tecknobit.equinoxcompose.helpers.viewmodels.EquinoxViewModel.suspendRefresher","location":"-equinox--compose/com.tecknobit.equinoxcompose.helpers.viewmodels/-equinox-view-model/suspend-refresher.html","searchKeys":["suspendRefresher","open fun suspendRefresher()","com.tecknobit.equinoxcompose.helpers.viewmodels.EquinoxViewModel.suspendRefresher"]},{"name":"open override fun create(context: Context): Context","description":"com.tecknobit.equinoxcompose.helpers.utils.AppContextInitializer.create","location":"-equinox--compose/com.tecknobit.equinoxcompose.helpers.utils/-app-context-initializer/create.html","searchKeys":["create","open override fun create(context: Context): Context","com.tecknobit.equinoxcompose.helpers.utils.AppContextInitializer.create"]},{"name":"open override fun dependencies(): List<Class<out Initializer<*>>>","description":"com.tecknobit.equinoxcompose.helpers.utils.AppContextInitializer.dependencies","location":"-equinox--compose/com.tecknobit.equinoxcompose.helpers.utils/-app-context-initializer/dependencies.html","searchKeys":["dependencies","open override fun dependencies(): List<Class<out Initializer<*>>>","com.tecknobit.equinoxcompose.helpers.utils.AppContextInitializer.dependencies"]},{"name":"private const val BLUE_PERCEPTION: Double = 0.114","description":"com.tecknobit.equinoxcompose.components.BLUE_PERCEPTION","location":"-equinox--compose/com.tecknobit.equinoxcompose.components/-b-l-u-e_-p-e-r-c-e-p-t-i-o-n.html","searchKeys":["BLUE_PERCEPTION","private const val BLUE_PERCEPTION: Double = 0.114","com.tecknobit.equinoxcompose.components.BLUE_PERCEPTION"]},{"name":"private const val GOOGLE_DNS: String","description":"com.tecknobit.equinoxcompose.helpers.session.GOOGLE_DNS","location":"-equinox--compose/com.tecknobit.equinoxcompose.helpers.session/-g-o-o-g-l-e_-d-n-s.html","searchKeys":["GOOGLE_DNS","private const val GOOGLE_DNS: String","com.tecknobit.equinoxcompose.helpers.session.GOOGLE_DNS"]},{"name":"private const val GREEN_PERCEPTION: Double = 0.587","description":"com.tecknobit.equinoxcompose.components.GREEN_PERCEPTION","location":"-equinox--compose/com.tecknobit.equinoxcompose.components/-g-r-e-e-n_-p-e-r-c-e-p-t-i-o-n.html","searchKeys":["GREEN_PERCEPTION","private const val GREEN_PERCEPTION: Double = 0.587","com.tecknobit.equinoxcompose.components.GREEN_PERCEPTION"]},{"name":"private const val RED_PERCEPTION: Double = 0.299","description":"com.tecknobit.equinoxcompose.components.RED_PERCEPTION","location":"-equinox--compose/com.tecknobit.equinoxcompose.components/-r-e-d_-p-e-r-c-e-p-t-i-o-n.html","searchKeys":["RED_PERCEPTION","private const val RED_PERCEPTION: Double = 0.299","com.tecknobit.equinoxcompose.components.RED_PERCEPTION"]},{"name":"private constructor()","description":"com.tecknobit.equinoxcompose.helpers.session.EquinoxScreen.EquinoxScreenEvent.EquinoxScreenEvent","location":"-equinox--compose/com.tecknobit.equinoxcompose.helpers.session/-equinox-screen/-equinox-screen-event/-equinox-screen-event.html","searchKeys":["EquinoxScreenEvent","private constructor()","com.tecknobit.equinoxcompose.helpers.session.EquinoxScreen.EquinoxScreenEvent.EquinoxScreenEvent"]},{"name":"private constructor()","description":"com.tecknobit.equinoxcompose.helpers.session.SessionStatus.SessionStatus","location":"-equinox--compose/com.tecknobit.equinoxcompose.helpers.session/-session-status/-session-status.html","searchKeys":["SessionStatus","private constructor()","com.tecknobit.equinoxcompose.helpers.session.SessionStatus.SessionStatus"]},{"name":"private constructor()","description":"com.tecknobit.equinoxcompose.utilities.BorderToColor.BorderToColor","location":"-equinox--compose/com.tecknobit.equinoxcompose.utilities/-border-to-color/-border-to-color.html","searchKeys":["BorderToColor","private constructor()","com.tecknobit.equinoxcompose.utilities.BorderToColor.BorderToColor"]},{"name":"private fun CustomDivider(modifier: Modifier = Modifier, thickness: Dp = DividerDefaults.Thickness, color: Color = DividerDefaults.color)","description":"com.tecknobit.equinoxcompose.components.CustomDivider","location":"-equinox--compose/com.tecknobit.equinoxcompose.components/-custom-divider.html","searchKeys":["CustomDivider","private fun CustomDivider(modifier: Modifier = Modifier, thickness: Dp = DividerDefaults.Thickness, color: Color = DividerDefaults.color)","com.tecknobit.equinoxcompose.components.CustomDivider"]},{"name":"private fun EmptyListUIContent(containerModifier: Modifier = Modifier, imageModifier: Modifier = Modifier, textStyle: TextStyle = TextStyle.Default, icon: ImageVector, themeColor: Color = MaterialTheme.colorScheme.primary, subText: String)","description":"com.tecknobit.equinoxcompose.components.EmptyListUIContent","location":"-equinox--compose/com.tecknobit.equinoxcompose.components/-empty-list-u-i-content.html","searchKeys":["EmptyListUIContent","private fun EmptyListUIContent(containerModifier: Modifier = Modifier, imageModifier: Modifier = Modifier, textStyle: TextStyle = TextStyle.Default, icon: ImageVector, themeColor: Color = MaterialTheme.colorScheme.primary, subText: String)","com.tecknobit.equinoxcompose.components.EmptyListUIContent"]},{"name":"private fun ErrorUIContent(containerModifier: Modifier = Modifier, imageModifier: Modifier = Modifier, textStyle: TextStyle = TextStyle.Default, errorIcon: ImageVector = Icons.Default.Error, errorColor: Color = MaterialTheme.colorScheme.error, errorMessage: String, retryAction: () -> Unit? = null, retryText: String? = null)","description":"com.tecknobit.equinoxcompose.components.ErrorUIContent","location":"-equinox--compose/com.tecknobit.equinoxcompose.components/-error-u-i-content.html","searchKeys":["ErrorUIContent","private fun ErrorUIContent(containerModifier: Modifier = Modifier, imageModifier: Modifier = Modifier, textStyle: TextStyle = TextStyle.Default, errorIcon: ImageVector = Icons.Default.Error, errorColor: Color = MaterialTheme.colorScheme.error, errorMessage: String, retryAction: () -> Unit? = null, retryText: String? = null)","com.tecknobit.equinoxcompose.components.ErrorUIContent"]},{"name":"private fun InstantiateSessionInstances()","description":"com.tecknobit.equinoxcompose.helpers.session.InstantiateSessionInstances","location":"-equinox--compose/com.tecknobit.equinoxcompose.helpers.session/-instantiate-session-instances.html","searchKeys":["InstantiateSessionInstances","private fun InstantiateSessionInstances()","com.tecknobit.equinoxcompose.helpers.session.InstantiateSessionInstances"]},{"name":"private fun LifecycleManager(lifecycleOwner: LifecycleOwner = LocalLifecycleOwner.current)","description":"com.tecknobit.equinoxcompose.helpers.session.EquinoxScreen.LifecycleManager","location":"-equinox--compose/com.tecknobit.equinoxcompose.helpers.session/-equinox-screen/-lifecycle-manager.html","searchKeys":["LifecycleManager","private fun LifecycleManager(lifecycleOwner: LifecycleOwner = LocalLifecycleOwner.current)","com.tecknobit.equinoxcompose.helpers.session.EquinoxScreen.LifecycleManager"]},{"name":"private fun LoadingItemUIContent(loadingRoutine: () -> Boolean, loadingIndicator: () -> Unit, contentLoaded: () -> Unit)","description":"com.tecknobit.equinoxcompose.components.LoadingItemUIContent","location":"-equinox--compose/com.tecknobit.equinoxcompose.components/-loading-item-u-i-content.html","searchKeys":["LoadingItemUIContent","private fun LoadingItemUIContent(loadingRoutine: () -> Boolean, loadingIndicator: () -> Unit, contentLoaded: () -> Unit)","com.tecknobit.equinoxcompose.components.LoadingItemUIContent"]},{"name":"private fun NoInternetConnectionUi(viewModel: EquinoxViewModel, retryText: String?, retryAction: () -> Unit?)","description":"com.tecknobit.equinoxcompose.helpers.session.NoInternetConnectionUi","location":"-equinox--compose/com.tecknobit.equinoxcompose.helpers.session/-no-internet-connection-ui.html","searchKeys":["NoInternetConnectionUi","private fun NoInternetConnectionUi(viewModel: EquinoxViewModel, retryText: String?, retryAction: () -> Unit?)","com.tecknobit.equinoxcompose.helpers.session.NoInternetConnectionUi"]},{"name":"private fun ServerOfflineUi(retryText: String?, retryAction: () -> Unit?)","description":"com.tecknobit.equinoxcompose.helpers.session.ServerOfflineUi","location":"-equinox--compose/com.tecknobit.equinoxcompose.helpers.session/-server-offline-ui.html","searchKeys":["ServerOfflineUi","private fun ServerOfflineUi(retryText: String?, retryAction: () -> Unit?)","com.tecknobit.equinoxcompose.helpers.session.ServerOfflineUi"]},{"name":"private fun SingleChoiceSegmentedButtonRowScope.Tab(pagerState: PagerState?, state: TabSelectorState, tab: TabDetails, currentIndex: Int, firstEntry: TabDetails, lastEntry: TabDetails, initialTabShape: Shape, middleShape: Shape, lastTabShape: Shape)","description":"com.tecknobit.equinoxcompose.components.tabselector.Tab","location":"-equinox--compose/com.tecknobit.equinoxcompose.components.tabselector/-tab.html","searchKeys":["Tab","private fun SingleChoiceSegmentedButtonRowScope.Tab(pagerState: PagerState?, state: TabSelectorState, tab: TabDetails, currentIndex: Int, firstEntry: TabDetails, lastEntry: TabDetails, initialTabShape: Shape, middleShape: Shape, lastTabShape: Shape)","com.tecknobit.equinoxcompose.components.tabselector.Tab"]},{"name":"private fun SplitBox(currentTextSlices: ArrayList<MutableState<String>>, boxSelectedColor: Color = MaterialTheme.colorScheme.inversePrimary, boxShape: Shape, boxTextStyle: TextStyle, textSlice: MutableState<String>, currentBox: Int)","description":"com.tecknobit.equinoxcompose.components.splittext.SplitBox","location":"-equinox--compose/com.tecknobit.equinoxcompose.components.splittext/-split-box.html","searchKeys":["SplitBox","private fun SplitBox(currentTextSlices: ArrayList<MutableState<String>>, boxSelectedColor: Color = MaterialTheme.colorScheme.inversePrimary, boxShape: Shape, boxTextStyle: TextStyle, textSlice: MutableState<String>, currentBox: Int)","com.tecknobit.equinoxcompose.components.splittext.SplitBox"]},{"name":"private fun getContrastingColor(backgroundColor: Color): Color","description":"com.tecknobit.equinoxcompose.components.getContrastingColor","location":"-equinox--compose/com.tecknobit.equinoxcompose.components/get-contrasting-color.html","searchKeys":["getContrastingColor","private fun getContrastingColor(backgroundColor: Color): Color","com.tecknobit.equinoxcompose.components.getContrastingColor"]},{"name":"private fun getValidUserLanguage(): String","description":"com.tecknobit.equinoxcompose.helpers.viewmodels.EquinoxAuthViewModel.getValidUserLanguage","location":"-equinox--compose/com.tecknobit.equinoxcompose.helpers.viewmodels/-equinox-auth-view-model/get-valid-user-language.html","searchKeys":["getValidUserLanguage","private fun getValidUserLanguage(): String","com.tecknobit.equinoxcompose.helpers.viewmodels.EquinoxAuthViewModel.getValidUserLanguage"]},{"name":"private fun hasBeenDisconnectedAction()","description":"com.tecknobit.equinoxcompose.helpers.session.hasBeenDisconnectedAction","location":"-equinox--compose/com.tecknobit.equinoxcompose.helpers.session/has-been-disconnected-action.html","searchKeys":["hasBeenDisconnectedAction","private fun hasBeenDisconnectedAction()","com.tecknobit.equinoxcompose.helpers.session.hasBeenDisconnectedAction"]},{"name":"private fun pasteSlices(splits: Int, currentTextSlices: ArrayList<MutableState<String>>, slice: String)","description":"com.tecknobit.equinoxcompose.components.splittext.pasteSlices","location":"-equinox--compose/com.tecknobit.equinoxcompose.components.splittext/paste-slices.html","searchKeys":["pasteSlices","private fun pasteSlices(splits: Int, currentTextSlices: ArrayList<MutableState<String>>, slice: String)","com.tecknobit.equinoxcompose.components.splittext.pasteSlices"]},{"name":"private fun signIn()","description":"com.tecknobit.equinoxcompose.helpers.viewmodels.EquinoxAuthViewModel.signIn","location":"-equinox--compose/com.tecknobit.equinoxcompose.helpers.viewmodels/-equinox-auth-view-model/sign-in.html","searchKeys":["signIn","private fun signIn()","com.tecknobit.equinoxcompose.helpers.viewmodels.EquinoxAuthViewModel.signIn"]},{"name":"private fun signUp()","description":"com.tecknobit.equinoxcompose.helpers.viewmodels.EquinoxAuthViewModel.signUp","location":"-equinox--compose/com.tecknobit.equinoxcompose.helpers.viewmodels/-equinox-auth-view-model/sign-up.html","searchKeys":["signUp","private fun signUp()","com.tecknobit.equinoxcompose.helpers.viewmodels.EquinoxAuthViewModel.signUp"]},{"name":"private lateinit var application: Application","description":"com.tecknobit.equinoxcompose.helpers.utils.AppContext.application","location":"-equinox--compose/com.tecknobit.equinoxcompose.helpers.utils/-app-context/application.html","searchKeys":["application","private lateinit var application: Application","com.tecknobit.equinoxcompose.helpers.utils.AppContext.application"]},{"name":"private lateinit var currentActiveWritingMode: MutableState<Boolean>","description":"com.tecknobit.equinoxcompose.components.currentActiveWritingMode","location":"-equinox--compose/com.tecknobit.equinoxcompose.components/current-active-writing-mode.html","searchKeys":["currentActiveWritingMode","private lateinit var currentActiveWritingMode: MutableState<Boolean>","com.tecknobit.equinoxcompose.components.currentActiveWritingMode"]},{"name":"private lateinit var focusManager: FocusManager","description":"com.tecknobit.equinoxcompose.components.splittext.focusManager","location":"-equinox--compose/com.tecknobit.equinoxcompose.components.splittext/focus-manager.html","searchKeys":["focusManager","private lateinit var focusManager: FocusManager","com.tecknobit.equinoxcompose.components.splittext.focusManager"]},{"name":"private lateinit var hasBeenDisconnected: MutableState<Boolean>","description":"com.tecknobit.equinoxcompose.helpers.session.hasBeenDisconnected","location":"-equinox--compose/com.tecknobit.equinoxcompose.helpers.session/has-been-disconnected.html","searchKeys":["hasBeenDisconnected","private lateinit var hasBeenDisconnected: MutableState<Boolean>","com.tecknobit.equinoxcompose.helpers.session.hasBeenDisconnected"]},{"name":"private lateinit var isServerOffline: MutableState<Boolean>","description":"com.tecknobit.equinoxcompose.helpers.session.isServerOffline","location":"-equinox--compose/com.tecknobit.equinoxcompose.helpers.session/is-server-offline.html","searchKeys":["isServerOffline","private lateinit var isServerOffline: MutableState<Boolean>","com.tecknobit.equinoxcompose.helpers.session.isServerOffline"]},{"name":"private lateinit var noInternetConnection: MutableState<Boolean>","description":"com.tecknobit.equinoxcompose.helpers.session.noInternetConnection","location":"-equinox--compose/com.tecknobit.equinoxcompose.helpers.session/no-internet-connection.html","searchKeys":["noInternetConnection","private lateinit var noInternetConnection: MutableState<Boolean>","com.tecknobit.equinoxcompose.helpers.session.noInternetConnection"]},{"name":"private lateinit var selectedTab: MutableState<Int>","description":"com.tecknobit.equinoxcompose.components.tabselector.TabSelectorState.selectedTab","location":"-equinox--compose/com.tecknobit.equinoxcompose.components.tabselector/-tab-selector-state/selected-tab.html","searchKeys":["selectedTab","private lateinit var selectedTab: MutableState<Int>","com.tecknobit.equinoxcompose.components.tabselector.TabSelectorState.selectedTab"]},{"name":"private lateinit var sessionSetup: SessionSetup","description":"com.tecknobit.equinoxcompose.helpers.session.sessionSetup","location":"-equinox--compose/com.tecknobit.equinoxcompose.helpers.session/session-setup.html","searchKeys":["sessionSetup","private lateinit var sessionSetup: SessionSetup","com.tecknobit.equinoxcompose.helpers.session.sessionSetup"]},{"name":"private lateinit var sessionStatus: MutableState<SessionStatus>","description":"com.tecknobit.equinoxcompose.helpers.session.sessionStatus","location":"-equinox--compose/com.tecknobit.equinoxcompose.helpers.session/session-status.html","searchKeys":["sessionStatus","private lateinit var sessionStatus: MutableState<SessionStatus>","com.tecknobit.equinoxcompose.helpers.session.sessionStatus"]},{"name":"private val defaultOnValueChange: ((String) -> Boolean?, MutableState<Boolean>, MutableState<String>, Boolean, Boolean, String) -> Unit","description":"com.tecknobit.equinoxcompose.components.defaultOnValueChange","location":"-equinox--compose/com.tecknobit.equinoxcompose.components/default-on-value-change.html","searchKeys":["defaultOnValueChange","private val defaultOnValueChange: ((String) -> Boolean?, MutableState<Boolean>, MutableState<String>, Boolean, Boolean, String) -> Unit","com.tecknobit.equinoxcompose.components.defaultOnValueChange"]},{"name":"private val fetcherManager: <Error class: unknown class>","description":"com.tecknobit.equinoxcompose.helpers.viewmodels.EquinoxViewModel.fetcherManager","location":"-equinox--compose/com.tecknobit.equinoxcompose.helpers.viewmodels/-equinox-view-model/fetcher-manager.html","searchKeys":["fetcherManager","private val fetcherManager: <Error class: unknown class>","com.tecknobit.equinoxcompose.helpers.viewmodels.EquinoxViewModel.fetcherManager"]},{"name":"private val localUser: <Error class: unknown class>","description":"com.tecknobit.equinoxcompose.helpers.viewmodels.EquinoxAuthViewModel.localUser","location":"-equinox--compose/com.tecknobit.equinoxcompose.helpers.viewmodels/-equinox-auth-view-model/local-user.html","searchKeys":["localUser","private val localUser: <Error class: unknown class>","com.tecknobit.equinoxcompose.helpers.viewmodels.EquinoxAuthViewModel.localUser"]},{"name":"private val localUser: <Error class: unknown class>","description":"com.tecknobit.equinoxcompose.helpers.viewmodels.EquinoxProfileViewModel.localUser","location":"-equinox--compose/com.tecknobit.equinoxcompose.helpers.viewmodels/-equinox-profile-view-model/local-user.html","searchKeys":["localUser","private val localUser: <Error class: unknown class>","com.tecknobit.equinoxcompose.helpers.viewmodels.EquinoxProfileViewModel.localUser"]},{"name":"private val loggerEnabled: Boolean = true","description":"com.tecknobit.equinoxcompose.helpers.session.EquinoxScreen.loggerEnabled","location":"-equinox--compose/com.tecknobit.equinoxcompose.helpers.session/-equinox-screen/logger-enabled.html","searchKeys":["loggerEnabled","private val loggerEnabled: Boolean = true","com.tecknobit.equinoxcompose.helpers.session.EquinoxScreen.loggerEnabled"]},{"name":"private val requester: <Error class: unknown class>","description":"com.tecknobit.equinoxcompose.helpers.viewmodels.EquinoxAuthViewModel.requester","location":"-equinox--compose/com.tecknobit.equinoxcompose.helpers.viewmodels/-equinox-auth-view-model/requester.html","searchKeys":["requester","private val requester: <Error class: unknown class>","com.tecknobit.equinoxcompose.helpers.viewmodels.EquinoxAuthViewModel.requester"]},{"name":"private val requester: <Error class: unknown class>","description":"com.tecknobit.equinoxcompose.helpers.viewmodels.EquinoxProfileViewModel.requester","location":"-equinox--compose/com.tecknobit.equinoxcompose.helpers.viewmodels/-equinox-profile-view-model/requester.html","searchKeys":["requester","private val requester: <Error class: unknown class>","com.tecknobit.equinoxcompose.helpers.viewmodels.EquinoxProfileViewModel.requester"]},{"name":"private var activityRef: WeakReference<Activity>?","description":"com.tecknobit.equinoxcompose.helpers.utils.ContextActivityProvider.activityRef","location":"-equinox--compose/com.tecknobit.equinoxcompose.helpers.utils/-context-activity-provider/activity-ref.html","searchKeys":["activityRef","private var activityRef: WeakReference<Activity>?","com.tecknobit.equinoxcompose.helpers.utils.ContextActivityProvider.activityRef"]},{"name":"protected abstract fun ArrangeScreenContent()","description":"com.tecknobit.equinoxcompose.helpers.session.EquinoxScreen.ArrangeScreenContent","location":"-equinox--compose/com.tecknobit.equinoxcompose.helpers.session/-equinox-screen/-arrange-screen-content.html","searchKeys":["ArrangeScreenContent","protected abstract fun ArrangeScreenContent()","com.tecknobit.equinoxcompose.helpers.session.EquinoxScreen.ArrangeScreenContent"]},{"name":"protected abstract fun CollectStates()","description":"com.tecknobit.equinoxcompose.helpers.session.EquinoxScreen.CollectStates","location":"-equinox--compose/com.tecknobit.equinoxcompose.helpers.session/-equinox-screen/-collect-states.html","searchKeys":["CollectStates","protected abstract fun CollectStates()","com.tecknobit.equinoxcompose.helpers.session.EquinoxScreen.CollectStates"]},{"name":"protected fun getUserLanguage(): String","description":"com.tecknobit.equinoxcompose.helpers.viewmodels.EquinoxAuthViewModel.getUserLanguage","location":"-equinox--compose/com.tecknobit.equinoxcompose.helpers.viewmodels/-equinox-auth-view-model/get-user-language.html","searchKeys":["getUserLanguage","protected fun getUserLanguage(): String","com.tecknobit.equinoxcompose.helpers.viewmodels.EquinoxAuthViewModel.getUserLanguage"]},{"name":"protected fun logScreenEvent(event: Lifecycle.Event)","description":"com.tecknobit.equinoxcompose.helpers.session.EquinoxScreen.logScreenEvent","location":"-equinox--compose/com.tecknobit.equinoxcompose.helpers.session/-equinox-screen/log-screen-event.html","searchKeys":["logScreenEvent","protected fun logScreenEvent(event: Lifecycle.Event)","com.tecknobit.equinoxcompose.helpers.session.EquinoxScreen.logScreenEvent"]},{"name":"protected fun logScreenEvent(event: String)","description":"com.tecknobit.equinoxcompose.helpers.session.EquinoxScreen.logScreenEvent","location":"-equinox--compose/com.tecknobit.equinoxcompose.helpers.session/-equinox-screen/log-screen-event.html","searchKeys":["logScreenEvent","protected fun logScreenEvent(event: String)","com.tecknobit.equinoxcompose.helpers.session.EquinoxScreen.logScreenEvent"]},{"name":"protected open fun getSignInCustomParameters(): Array<out Any?>","description":"com.tecknobit.equinoxcompose.helpers.viewmodels.EquinoxAuthViewModel.getSignInCustomParameters","location":"-equinox--compose/com.tecknobit.equinoxcompose.helpers.viewmodels/-equinox-auth-view-model/get-sign-in-custom-parameters.html","searchKeys":["getSignInCustomParameters","protected open fun getSignInCustomParameters(): Array<out Any?>","com.tecknobit.equinoxcompose.helpers.viewmodels.EquinoxAuthViewModel.getSignInCustomParameters"]},{"name":"protected open fun getSignUpCustomParameters(): Array<out Any?>","description":"com.tecknobit.equinoxcompose.helpers.viewmodels.EquinoxAuthViewModel.getSignUpCustomParameters","location":"-equinox--compose/com.tecknobit.equinoxcompose.helpers.viewmodels/-equinox-auth-view-model/get-sign-up-custom-parameters.html","searchKeys":["getSignUpCustomParameters","protected open fun getSignUpCustomParameters(): Array<out Any?>","com.tecknobit.equinoxcompose.helpers.viewmodels.EquinoxAuthViewModel.getSignUpCustomParameters"]},{"name":"protected open fun launchApp(response: <Error class: unknown class>, name: String, surname: String, language: String, vararg custom: Any?)","description":"com.tecknobit.equinoxcompose.helpers.viewmodels.EquinoxAuthViewModel.launchApp","location":"-equinox--compose/com.tecknobit.equinoxcompose.helpers.viewmodels/-equinox-auth-view-model/launch-app.html","searchKeys":["launchApp","protected open fun launchApp(response: <Error class: unknown class>, name: String, surname: String, language: String, vararg custom: Any?)","com.tecknobit.equinoxcompose.helpers.viewmodels.EquinoxAuthViewModel.launchApp"]},{"name":"protected open fun onAny()","description":"com.tecknobit.equinoxcompose.helpers.session.EquinoxScreen.onAny","location":"-equinox--compose/com.tecknobit.equinoxcompose.helpers.session/-equinox-screen/on-any.html","searchKeys":["onAny","protected open fun onAny()","com.tecknobit.equinoxcompose.helpers.session.EquinoxScreen.onAny"]},{"name":"protected open fun onCreate()","description":"com.tecknobit.equinoxcompose.helpers.session.EquinoxScreen.onCreate","location":"-equinox--compose/com.tecknobit.equinoxcompose.helpers.session/-equinox-screen/on-create.html","searchKeys":["onCreate","protected open fun onCreate()","com.tecknobit.equinoxcompose.helpers.session.EquinoxScreen.onCreate"]},{"name":"protected open fun onDestroy()","description":"com.tecknobit.equinoxcompose.helpers.session.EquinoxScreen.onDestroy","location":"-equinox--compose/com.tecknobit.equinoxcompose.helpers.session/-equinox-screen/on-destroy.html","searchKeys":["onDestroy","protected open fun onDestroy()","com.tecknobit.equinoxcompose.helpers.session.EquinoxScreen.onDestroy"]},{"name":"protected open fun onDispose()","description":"com.tecknobit.equinoxcompose.helpers.session.EquinoxScreen.onDispose","location":"-equinox--compose/com.tecknobit.equinoxcompose.helpers.session/-equinox-screen/on-dispose.html","searchKeys":["onDispose","protected open fun onDispose()","com.tecknobit.equinoxcompose.helpers.session.EquinoxScreen.onDispose"]},{"name":"protected open fun onInit()","description":"com.tecknobit.equinoxcompose.helpers.session.EquinoxScreen.onInit","location":"-equinox--compose/com.tecknobit.equinoxcompose.helpers.session/-equinox-screen/on-init.html","searchKeys":["onInit","protected open fun onInit()","com.tecknobit.equinoxcompose.helpers.session.EquinoxScreen.onInit"]},{"name":"protected open fun onPause()","description":"com.tecknobit.equinoxcompose.helpers.session.EquinoxScreen.onPause","location":"-equinox--compose/com.tecknobit.equinoxcompose.helpers.session/-equinox-screen/on-pause.html","searchKeys":["onPause","protected open fun onPause()","com.tecknobit.equinoxcompose.helpers.session.EquinoxScreen.onPause"]},{"name":"protected open fun onResume()","description":"com.tecknobit.equinoxcompose.helpers.session.EquinoxScreen.onResume","location":"-equinox--compose/com.tecknobit.equinoxcompose.helpers.session/-equinox-screen/on-resume.html","searchKeys":["onResume","protected open fun onResume()","com.tecknobit.equinoxcompose.helpers.session.EquinoxScreen.onResume"]},{"name":"protected open fun onStart()","description":"com.tecknobit.equinoxcompose.helpers.session.EquinoxScreen.onStart","location":"-equinox--compose/com.tecknobit.equinoxcompose.helpers.session/-equinox-screen/on-start.html","searchKeys":["onStart","protected open fun onStart()","com.tecknobit.equinoxcompose.helpers.session.EquinoxScreen.onStart"]},{"name":"protected open fun onStop()","description":"com.tecknobit.equinoxcompose.helpers.session.EquinoxScreen.onStop","location":"-equinox--compose/com.tecknobit.equinoxcompose.helpers.session/-equinox-screen/on-stop.html","searchKeys":["onStop","protected open fun onStop()","com.tecknobit.equinoxcompose.helpers.session.EquinoxScreen.onStop"]},{"name":"protected open fun signInFormIsValid(): Boolean","description":"com.tecknobit.equinoxcompose.helpers.viewmodels.EquinoxAuthViewModel.signInFormIsValid","location":"-equinox--compose/com.tecknobit.equinoxcompose.helpers.viewmodels/-equinox-auth-view-model/sign-in-form-is-valid.html","searchKeys":["signInFormIsValid","protected open fun signInFormIsValid(): Boolean","com.tecknobit.equinoxcompose.helpers.viewmodels.EquinoxAuthViewModel.signInFormIsValid"]},{"name":"protected open fun signUpFormIsValid(): Boolean","description":"com.tecknobit.equinoxcompose.helpers.viewmodels.EquinoxAuthViewModel.signUpFormIsValid","location":"-equinox--compose/com.tecknobit.equinoxcompose.helpers.viewmodels/-equinox-auth-view-model/sign-up-form-is-valid.html","searchKeys":["signUpFormIsValid","protected open fun signUpFormIsValid(): Boolean","com.tecknobit.equinoxcompose.helpers.viewmodels.EquinoxAuthViewModel.signUpFormIsValid"]},{"name":"protected open val viewModel: V? = null","description":"com.tecknobit.equinoxcompose.helpers.session.EquinoxScreen.viewModel","location":"-equinox--compose/com.tecknobit.equinoxcompose.helpers.session/-equinox-screen/view-model.html","searchKeys":["viewModel","protected open val viewModel: V? = null","com.tecknobit.equinoxcompose.helpers.session.EquinoxScreen.viewModel"]},{"name":"val color: Color? = null","description":"com.tecknobit.equinoxcompose.components.splittext.InfoText.color","location":"-equinox--compose/com.tecknobit.equinoxcompose.components.splittext/-info-text/color.html","searchKeys":["color","val color: Color? = null","com.tecknobit.equinoxcompose.components.splittext.InfoText.color"]},{"name":"val entries: EnumEntries<BorderToColor>","description":"com.tecknobit.equinoxcompose.utilities.BorderToColor.entries","location":"-equinox--compose/com.tecknobit.equinoxcompose.utilities/-border-to-color/entries.html","searchKeys":["entries","val entries: EnumEntries<BorderToColor>","com.tecknobit.equinoxcompose.utilities.BorderToColor.entries"]},{"name":"val entries: EnumEntries<EquinoxScreen.EquinoxScreenEvent>","description":"com.tecknobit.equinoxcompose.helpers.session.EquinoxScreen.EquinoxScreenEvent.entries","location":"-equinox--compose/com.tecknobit.equinoxcompose.helpers.session/-equinox-screen/-equinox-screen-event/entries.html","searchKeys":["entries","val entries: EnumEntries<EquinoxScreen.EquinoxScreenEvent>","com.tecknobit.equinoxcompose.helpers.session.EquinoxScreen.EquinoxScreenEvent.entries"]},{"name":"val entries: EnumEntries<SessionStatus>","description":"com.tecknobit.equinoxcompose.helpers.session.SessionStatus.entries","location":"-equinox--compose/com.tecknobit.equinoxcompose.helpers.session/-session-status/entries.html","searchKeys":["entries","val entries: EnumEntries<SessionStatus>","com.tecknobit.equinoxcompose.helpers.session.SessionStatus.entries"]},{"name":"val fontSize: TextUnit","description":"com.tecknobit.equinoxcompose.components.splittext.InfoText.fontSize","location":"-equinox--compose/com.tecknobit.equinoxcompose.components.splittext/-info-text/font-size.html","searchKeys":["fontSize","val fontSize: TextUnit","com.tecknobit.equinoxcompose.components.splittext.InfoText.fontSize"]},{"name":"val hasBeenDisconnectedAction: () -> Unit","description":"com.tecknobit.equinoxcompose.helpers.session.SessionSetup.hasBeenDisconnectedAction","location":"-equinox--compose/com.tecknobit.equinoxcompose.helpers.session/-session-setup/has-been-disconnected-action.html","searchKeys":["hasBeenDisconnectedAction","val hasBeenDisconnectedAction: () -> Unit","com.tecknobit.equinoxcompose.helpers.session.SessionSetup.hasBeenDisconnectedAction"]},{"name":"val icon: ImageVector? = null","description":"com.tecknobit.equinoxcompose.components.tabselector.TabDetails.icon","location":"-equinox--compose/com.tecknobit.equinoxcompose.components.tabselector/-tab-details/icon.html","searchKeys":["icon","val icon: ImageVector? = null","com.tecknobit.equinoxcompose.components.tabselector.TabDetails.icon"]},{"name":"val initialSliceValues: List<String>","description":"com.tecknobit.equinoxcompose.components.splittext.SplitTextState.initialSliceValues","location":"-equinox--compose/com.tecknobit.equinoxcompose.components.splittext/-split-text-state/initial-slice-values.html","searchKeys":["initialSliceValues","val initialSliceValues: List<String>","com.tecknobit.equinoxcompose.components.splittext.SplitTextState.initialSliceValues"]},{"name":"val initialTabIndex: Int","description":"com.tecknobit.equinoxcompose.components.tabselector.TabSelectorState.initialTabIndex","location":"-equinox--compose/com.tecknobit.equinoxcompose.components.tabselector/-tab-selector-state/initial-tab-index.html","searchKeys":["initialTabIndex","val initialTabIndex: Int","com.tecknobit.equinoxcompose.components.tabselector.TabSelectorState.initialTabIndex"]},{"name":"val noInternetConnectionIcon: ImageVector","description":"com.tecknobit.equinoxcompose.helpers.session.SessionSetup.noInternetConnectionIcon","location":"-equinox--compose/com.tecknobit.equinoxcompose.helpers.session/-session-setup/no-internet-connection-icon.html","searchKeys":["noInternetConnectionIcon","val noInternetConnectionIcon: ImageVector","com.tecknobit.equinoxcompose.helpers.session.SessionSetup.noInternetConnectionIcon"]},{"name":"val noInternetConnectionMessage: String","description":"com.tecknobit.equinoxcompose.helpers.session.SessionSetup.noInternetConnectionMessage","location":"-equinox--compose/com.tecknobit.equinoxcompose.helpers.session/-session-setup/no-internet-connection-message.html","searchKeys":["noInternetConnectionMessage","val noInternetConnectionMessage: String","com.tecknobit.equinoxcompose.helpers.session.SessionSetup.noInternetConnectionMessage"]},{"name":"val onEnter: EnterTransition","description":"com.tecknobit.equinoxcompose.components.UIAnimations.onEnter","location":"-equinox--compose/com.tecknobit.equinoxcompose.components/-u-i-animations/on-enter.html","searchKeys":["onEnter","val onEnter: EnterTransition","com.tecknobit.equinoxcompose.components.UIAnimations.onEnter"]},{"name":"val onExit: ExitTransition","description":"com.tecknobit.equinoxcompose.components.UIAnimations.onExit","location":"-equinox--compose/com.tecknobit.equinoxcompose.components/-u-i-animations/on-exit.html","searchKeys":["onExit","val onExit: ExitTransition","com.tecknobit.equinoxcompose.components.UIAnimations.onExit"]},{"name":"val selectedIcon: ImageVector","description":"com.tecknobit.equinoxcompose.components.tabselector.TabDetails.selectedIcon","location":"-equinox--compose/com.tecknobit.equinoxcompose.components.tabselector/-tab-details/selected-icon.html","searchKeys":["selectedIcon","val selectedIcon: ImageVector","com.tecknobit.equinoxcompose.components.tabselector.TabDetails.selectedIcon"]},{"name":"val serverOfflineIcon: ImageVector","description":"com.tecknobit.equinoxcompose.helpers.session.SessionSetup.serverOfflineIcon","location":"-equinox--compose/com.tecknobit.equinoxcompose.helpers.session/-session-setup/server-offline-icon.html","searchKeys":["serverOfflineIcon","val serverOfflineIcon: ImageVector","com.tecknobit.equinoxcompose.helpers.session.SessionSetup.serverOfflineIcon"]},{"name":"val serverOfflineMessage: String","description":"com.tecknobit.equinoxcompose.helpers.session.SessionSetup.serverOfflineMessage","location":"-equinox--compose/com.tecknobit.equinoxcompose.helpers.session/-session-setup/server-offline-message.html","searchKeys":["serverOfflineMessage","val serverOfflineMessage: String","com.tecknobit.equinoxcompose.helpers.session.SessionSetup.serverOfflineMessage"]},{"name":"val snackbarHostState: SnackbarHostState? = null","description":"com.tecknobit.equinoxcompose.helpers.viewmodels.EquinoxViewModel.snackbarHostState","location":"-equinox--compose/com.tecknobit.equinoxcompose.helpers.viewmodels/-equinox-view-model/snackbar-host-state.html","searchKeys":["snackbarHostState","val snackbarHostState: SnackbarHostState? = null","com.tecknobit.equinoxcompose.helpers.viewmodels.EquinoxViewModel.snackbarHostState"]},{"name":"val splits: Int","description":"com.tecknobit.equinoxcompose.components.splittext.SplitTextState.splits","location":"-equinox--compose/com.tecknobit.equinoxcompose.components.splittext/-split-text-state/splits.html","searchKeys":["splits","val splits: Int","com.tecknobit.equinoxcompose.components.splittext.SplitTextState.splits"]},{"name":"val tabTitle: String","description":"com.tecknobit.equinoxcompose.components.tabselector.TabDetails.tabTitle","location":"-equinox--compose/com.tecknobit.equinoxcompose.components.tabselector/-tab-details/tab-title.html","searchKeys":["tabTitle","val tabTitle: String","com.tecknobit.equinoxcompose.components.tabselector.TabDetails.tabTitle"]},{"name":"val text: String","description":"com.tecknobit.equinoxcompose.components.splittext.InfoText.text","location":"-equinox--compose/com.tecknobit.equinoxcompose.components.splittext/-info-text/text.html","searchKeys":["text","val text: String","com.tecknobit.equinoxcompose.components.splittext.InfoText.text"]},{"name":"val textSlices: ArrayList<MutableState<String>>","description":"com.tecknobit.equinoxcompose.components.splittext.SplitTextState.textSlices","location":"-equinox--compose/com.tecknobit.equinoxcompose.components.splittext/-split-text-state/text-slices.html","searchKeys":["textSlices","val textSlices: ArrayList<MutableState<String>>","com.tecknobit.equinoxcompose.components.splittext.SplitTextState.textSlices"]},{"name":"val textStyle: TextStyle","description":"com.tecknobit.equinoxcompose.components.splittext.InfoText.textStyle","location":"-equinox--compose/com.tecknobit.equinoxcompose.components.splittext/-info-text/text-style.html","searchKeys":["textStyle","val textStyle: TextStyle","com.tecknobit.equinoxcompose.components.splittext.InfoText.textStyle"]},{"name":"val visible: Boolean","description":"com.tecknobit.equinoxcompose.components.UIAnimations.visible","location":"-equinox--compose/com.tecknobit.equinoxcompose.components/-u-i-animations/visible.html","searchKeys":["visible","val visible: Boolean","com.tecknobit.equinoxcompose.components.UIAnimations.visible"]}]
